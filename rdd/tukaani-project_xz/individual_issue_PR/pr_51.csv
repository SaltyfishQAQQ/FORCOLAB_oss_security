event,from,created_at,body,to
thread_started,bebuch,2023-05-31T15:41:50Z,"Boost iostream [uses `find_package` in quiet mode](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#L16) and then [again uses `find_package` with required](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#LL30C1-L30C49). This second call triggers a `add_library cannot create imported target ""ZLIB::ZLIB"" because another target with the same name already exists.`

This can simply be fixed by skipping the alias part on secondary `find_package` runs.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [x] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?

From Boost iostream compilation which finds XZ via config file:

```
CMake Error at C:/Temp/lib/win_x86_64_debug/lib/cmake/zlib/ZLIBConfig.cmake:13 (add_library):
  add_library cannot create imported target ""ZLIB::ZLIB"" because another
  target with the same name already exists.
Call Stack (most recent call first):
  libs/iostreams/CMakeLists.txt:30 (find_package)
  libs/iostreams/CMakeLists.txt:38 (boost_iostreams_option)
```

## What is the new behavior?

`find_package` works on the first and all folloring runs.

## Does this introduce a breaking change?

- [ ] Yes
- [x] No",['bebuch']
commented,JiaT75,2023-06-06T12:56:17Z,"Thanks the for PR! This is a great addition. It seems like the FindLibLZMA module has something similar to protect against multiple find_package() calls, so it seems like a common protection to include.

Can you wrap your commit message with newlines around 73 character width? The first sentence in your commit message is a bit long. The reason we care is because in our releases the Changelog is generated from the commit messages. In order to keep this and the commit log itself looking nice, we have a few standards we try to enforce.",['bebuch']
commented,bebuch,2023-06-06T13:24:13Z,"@JiaT75 Unfortunately I don't know if this can be done online on GitHub and I'm too stressed right now to make an offline change using Git.

I have given you access to my fork. Would be nice if you could do that.",JiaT75
commented,JiaT75,2023-06-06T13:34:55Z,"@bebuch I was able to make the commit message change during the Squash and Merge. The commit is in your name and I only made stylistic edits to the message (I did not change the meaning).

Thanks for your contribution!",bebuch
