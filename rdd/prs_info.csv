pr_#,state,created_at,updated_at,closed_at,merged_at,title,body,url,issue_url,merge_sha,user
168,closed,2025-03-10 02:18:51,2025-03-10 21:51:32,2025-03-10 13:57:16,,tuklib_physmem: Silence -Wsign-conversion on AIX.,"On AIX:

```
$ ./configure && make
[...]
../common/tuklib_physmem.c:151:8: warning: conversion to 'uint64_t' {aka 'long long unsigned int'} from 'long long int' may change the sign of the result [-Wsign-conversion]
  151 |  ret = _system_configuration.physmem;
      |        ^~~~~~~~~~~~~~~~~~~~~
mv -f .deps/liblzma_la-tuklib_physmem.Tpo .deps/liblzma_la-tuklib_physmem.Plo
```

This is harmless, but since the warning is enabled by ./configure if available I figured you would want it fixed.

",https://github.com/tukaani-project/xz/pull/168,https://api.github.com/repos/tukaani-project/xz/issues/168,edd4cc2e64b0fb138cd5ab99fe17868f161dd3b5,collinfunk
166,closed,2025-02-16 17:28:42,2025-02-19 14:24:33,2025-02-17 16:48:16,,Build: Add support for `gl_REPLACE_GETOPT_ALWAYS` in getopt.m4,"Gnulib supports forcing the replacement of getopt & getopt_long, but that was removed from the in-tree simplified getopt.m4. This is useful for building for targets with broken getopt_long implementations.",https://github.com/tukaani-project/xz/pull/166,https://api.github.com/repos/tukaani-project/xz/issues/166,7df1dfcbaed53defa71d578c27fc21fc1e5fbcaa,lzcunt
165,closed,2025-02-03 23:07:45,2025-02-06 04:38:14,2025-02-06 04:37:38,,Fixed typos and improved Polish translation clarity.,Fixed typos and improved Polish translation clarity.,https://github.com/tukaani-project/xz/pull/165,https://api.github.com/repos/tukaani-project/xz/issues/165,883b5b46293af4f689a649c15ef5a972caa482e1,majevva
160,closed,2025-01-30 03:05:48,2025-01-30 18:27:58,2025-01-30 18:25:12,,update fr.po,"I added some translation so I was sure of the translation (I am a French speaker)

The parts I haven't translated yet are because I wasn't sure about the translation.",https://github.com/tukaani-project/xz/pull/160,https://api.github.com/repos/tukaani-project/xz/issues/160,0847354cad31ae52b3e16b9b1271eaa60536a9fb,femallet
159,closed,2024-12-27 08:21:32,2025-01-05 20:28:28,2025-01-04 08:52:23,,xz: Add --synchronous,"xz's default behavior is to delete the input file after successful compression or decompression (unless writing to standard output). If the system crashes soon after the deletion, it is possible that the newly written file has not yet hit the disk while the previous delete operation might have. In that case neither the original file nor the written file is available.

The `--synchronous` option makes xz call `fsync()` on the file and possibly the directory where the file was created. A similar option was added to GNU gzip 1.7 in 2016.
",https://github.com/tukaani-project/xz/pull/159,https://api.github.com/repos/tukaani-project/xz/issues/159,7ba6e83fa25f497e72ea9239b7c12b1f3d7a91a0,Larhzu
158,closed,2024-12-22 13:46:31,2024-12-22 18:44:01,2024-12-22 18:15:18,,CMake: Disable unity builds project-wide,"I have a project that uses xz via CMake's `FetchContent` module. This basically downloads xz and makes it part of the parent project using `add_subdirectory`.

After adding xz like this, I could no longer compile my project as a unity build because xz doesn't appear to support this. xz could certainly be modified to support this type of build, but that's not simply a one-time fix but a long term commitment.

<details>
<summary>These are the types of errors it generates:</summary>

```
In file included from /home/dexter/src/xz/src/liblzma/common/alone_decoder.c:14,
                 from /tmp/xz/CMakeFiles/liblzma.dir/Unity/unity_0_c.c:133:
/home/dexter/src/xz/src/liblzma/lz/lz_decoder.h:75:3: error: conflicting types for ‘lzma_lz_options’; have ‘struct <anonymous>’
   75 | } lzma_lz_options;
      |   ^~~~~~~~~~~~~~~
In file included from /home/dexter/src/xz/src/liblzma/lzma/lzma_encoder_private.h:16,
                 from /home/dexter/src/xz/src/liblzma/lzma/lzma_encoder.c:14:
/home/dexter/src/xz/src/liblzma/lz/lz_encoder.h:172:3: note: previous declaration of ‘lzma_lz_options’ with type ‘lzma_lz_options’
  172 | } lzma_lz_options;
      |   ^~~~~~~~~~~~~~~
```
```
/home/dexter/src/xz/src/xz/file_io.h:40:3: error: conflicting types for ‘io_buf’; have ‘union <anonymous>’
   40 | } io_buf;
      |   ^~~~~~
/home/dexter/src/xz/src/xz/file_io.h:40:3: note: previous declaration of ‘io_buf’ with type ‘io_buf’
   40 | } io_buf;
      |   ^~~~~~
```
</details>

This PR disables unity builds for the entire xz project directory. Because of how variable scoping works, if someone includes xz in their project and enables unity builds then it's still applied to any other part of the build that doesn't explicitly disable it for themselves.

Disabling unity builds when it doesn't work is recommended as per the `UNITY_BUILD` target property documentation:

>Projects should not directly set the `UNITY_BUILD` property or its associated `CMAKE_UNITY_BUILD` variable to true. [...] However, __it IS recommended to set the `UNITY_BUILD` property to false__ if it is known that enabling unity builds for target can lead to problems.

<hr>

Unity builds can sometimes reveal UB as compilation errors because the compiler can suddenly analyse across what would normally be separate compilation units. I just want to make it abundantly clear that I **DON'T** think that's what is going on here.

xz just employs some code patterns that happen to be incompatible with unity builds.",https://github.com/tukaani-project/xz/pull/158,https://api.github.com/repos/tukaani-project/xz/issues/158,b15af38a0f8b28095193a9ed522eb60f70856a43,dextercd
155,closed,2024-12-08 17:27:05,2024-12-18 15:35:56,2024-12-18 15:31:59,,liblzma: Fix incorrect macro name in a comment,"Very minor thing but this tripped me up. The comment references `lzma_ext_size_set` but this doesn't exist. It's supposed to say `lzma_set_ext_size`, with set at the start not the end.",https://github.com/tukaani-project/xz/pull/155,https://api.github.com/repos/tukaani-project/xz/issues/155,23b33391c20ca241659e398625a5228ec54ca1fb,dextercd
152,closed,2024-12-03 11:24:38,2024-12-03 11:24:57,2024-12-03 11:24:57,,Update README,..,https://github.com/tukaani-project/xz/pull/152,https://api.github.com/repos/tukaani-project/xz/issues/152,53e547d19bba5a7c5eb93014e26fb0d5eb51f31a,saulitalja
151,closed,2024-11-17 16:01:40,2025-01-06 09:33:46,2025-01-05 18:21:47,,Sync output to disk before removing source,"Synchronize created output to disk before removing original input. This lowers the risk to loose source and destination if a crash happens shortly after.

",https://github.com/tukaani-project/xz/pull/151,https://api.github.com/repos/tukaani-project/xz/issues/151,6238222bbf114ede8ac82b58a5eda42ad11ab774,sebastianas
149,closed,2024-10-15 10:11:42,2024-11-30 10:11:33,2024-11-30 10:11:33,,chore: Move SECURITY.md to the root of the repo,"closes #148
",https://github.com/tukaani-project/xz/pull/149,https://api.github.com/repos/tukaani-project/xz/issues/149,4331b1ddb7cc9258e0606dc96e56361d6297ad15,orhun
145,closed,2024-10-08 01:06:10,2024-12-18 15:32:00,2024-12-18 15:32:00,,po: Add Georgian translation,"Hello,
Here's almost complete translation for xz to Georgian.

Regards, Temuri",https://github.com/tukaani-project/xz/pull/145,https://api.github.com/repos/tukaani-project/xz/issues/145,171af02839954f7669095dcf605d7f293af4d086,NorwayFun
144,closed,2024-09-16 20:09:23,2024-09-16 22:35:42,2024-09-16 22:28:20,,lzmainfo: Avoid integer overflow,"The MB output can overflow with huge numbers. Most likely these are invalid lzma files anyway, but let's avoid garbage output.

Proof of Concept:

1. Create an lzma file with huge values
```
base64 -d <<< AP/////+/////////w== > poc.lzma
```

2. Run lzmainfo
```
lzmainfo poc.lzma
```

You can see this output:
```
poc.lzma
Uncompressed size:             0 MB (18446744073709551614 bytes)
Dictionary size:               0 MB (2^31 bytes)
Literal context bits (lc):     0
Literal pos bits (lp):         0
Number of pos bits (pb):       0
```

Clearly these MB values are wrong.",https://github.com/tukaani-project/xz/pull/144,https://api.github.com/repos/tukaani-project/xz/issues/144,5b330f4e5a341303ee56f93e092837881a72edc9,stoeckmann
143,closed,2024-09-16 20:07:40,2024-09-16 20:37:06,2024-09-16 20:36:56,,xzdec: Remove unused short option,"The ""M:"" entry must be a leftover from xz tool.
It's not available in xzdec.",https://github.com/tukaani-project/xz/pull/143,https://api.github.com/repos/tukaani-project/xz/issues/143,ebcab831defcae438cd4875923400b5e84977ff3,stoeckmann
141,closed,2024-09-10 09:30:42,2024-09-10 11:14:13,2024-09-10 11:14:12,,Fix typo in autogen.sh,,https://github.com/tukaani-project/xz/pull/141,https://api.github.com/repos/tukaani-project/xz/issues/141,fa6d598b90c1a049969a972dcb8f046719dfdee8,firasuke
140,closed,2024-09-08 01:25:49,2024-09-22 13:32:30,2024-09-22 13:32:30,,Translations: Fix improper expressions in Chinese (simplified) translation.,,https://github.com/tukaani-project/xz/pull/140,https://api.github.com/repos/tukaani-project/xz/issues/140,5d012fc194a1947e2788b4314cbcf171245c9506,ChenPi12
137,closed,2024-09-02 19:17:24,2025-03-10 13:57:17,2025-03-10 13:57:17,,Add support for Large Memory  Model on AIX 32-bit,"32-bit executables on AIX need to increase the address space to allow more than 256MB RAM.
It would be nice if this was available out of box.",https://github.com/tukaani-project/xz/pull/137,https://api.github.com/repos/tukaani-project/xz/issues/137,59f8679d24763d40af288e38beab592019d5319f,vchaves123
136,closed,2024-08-22 02:40:49,2024-08-22 09:53:22,2024-08-22 09:53:22,,"liblzma: fix movzw compatibility in range_decoder.h, close #121.","Support for instruction `movzw` without suffix in ""GNU as"" was added in commit [1] and stabilized in binutils 2.27, released in August 2016. Earlier systems don't accept this instruction without a suffix, making range_decoder.h's inline assembly unable to build on old systems such as Ubuntu 16.04, creating error messages like:

    lzma_decoder.c: Assembler messages:
    lzma_decoder.c:371: Error: no such instruction: `movzw 2(%r11),%esi'
    lzma_decoder.c:373: Error: no such instruction: `movzw 4(%r11),%edi'
    lzma_decoder.c:388: Error: no such instruction: `movzw 6(%r11),%edx'
    lzma_decoder.c:398: Error: no such instruction: `movzw (%r11,%r14,4),%esi'

This has been reported by at least 3 different users. Since xz and liblzma are base system tools and are often required in system upgrades themselves, compatibility with old systems shall be kept. This commit changes `movzw` to `movzwl` for compatibility.

[1] https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=c07315e0c610e0e3317b4c02266f81793df253d2

* Suggested-By: Lasse Collin <lasse.collin@tukaani.org>
* Tested-By: Yifeng Li <tomli@tomli.me>",https://github.com/tukaani-project/xz/pull/136,https://api.github.com/repos/tukaani-project/xz/issues/136,6f2a3aeedd63db1be006505506832177285a4ad0,biergaizi
134,closed,2024-08-06 10:55:31,2024-09-02 17:36:29,2024-08-25 14:41:14,,Fix: XZ_TOOL_LZMADEC,"When the XZ_TOOL_LZMADEC option is turned off, lzmadec should not be used.",https://github.com/tukaani-project/xz/pull/134,https://api.github.com/repos/tukaani-project/xz/issues/134,21862307bd49e085fa448a79c0704d3803d02902,wzhengsen
130,closed,2024-07-02 12:22:02,2024-07-03 19:47:49,2024-07-03 19:47:49,,cmake: overwrite user given NLS decision in case legacy cmake is detected,"Overwriteuser given NLS decision in case legacy cmake (e.g. 3.18.4) is detected.

Fixes:

  CMake Error at CMakeLists.txt:1675 (add_executable):
    Target ""xz"" links to target ""Intl::Intl"" but the target was not found.
    Perhaps a find_package() call is missing for an IMPORTED target, or an
    ALIAS target is missing?

  CMake Error at CMakeLists.txt:1619 (add_executable):
    Target ""lzmainfo"" links to target ""Intl::Intl"" but the target was not
    found.  Perhaps a find_package() call is missing for an IMPORTED target, or
    an ALIAS target is missing?


Closes: https://github.com/tukaani-project/xz/issues/129",https://github.com/tukaani-project/xz/pull/130,https://api.github.com/repos/tukaani-project/xz/issues/130,b445c39d001cfb0c1545ed86b2d31fc0cf8c7ae5,pseiderer
127,closed,2024-06-11 20:15:23,2024-06-17 15:29:57,2024-06-17 15:28:37,2024-06-17 15:28:36,x86 CLMUL CRC rewrite,"It's faster with both tiny and large buffers and doesn't require disabling any sanitizers.

With large buffers the extra speed is from folding chunks in parallel. For large buffers, faster versions are out there but it's diminishing returns in context of XZ Utils. So let's skip wider folding or AVX2 code at least for now.",https://github.com/tukaani-project/xz/pull/127,https://api.github.com/repos/tukaani-project/xz/issues/127,30a2d5d51006301a3ddab5ef1f5ff0a9d74dce6f,Larhzu
126,closed,2024-06-07 02:26:42,2024-06-10 08:26:30,2024-06-07 13:17:32,,tuklib_integer: Fix byteswap macros for OpenBSD,"OpenBSD uses swap*() instead of bswap*() like the other BSD's.

This fixes building with GCC 4.2.",https://github.com/tukaani-project/xz/pull/126,https://api.github.com/repos/tukaani-project/xz/issues/126,493826606fa1c0b74edb26afab77428667a6eba8,brad0
125,closed,2024-06-07 01:56:55,2024-06-10 08:26:40,2024-06-07 13:17:32,,liblzma: ARM64 CRC32: Add support for OpenBSD CPU feature detection,,https://github.com/tukaani-project/xz/pull/125,https://api.github.com/repos/tukaani-project/xz/issues/125,cf6345ba6780aeffaa4d1cf1aaaf22828064f831,brad0
124,closed,2024-06-05 22:22:19,2024-06-07 13:18:01,2024-06-07 13:17:33,,fix typos,,https://github.com/tukaani-project/xz/pull/124,https://api.github.com/repos/tukaani-project/xz/issues/124,75e8b48c002ee1ec209dd560418ded3332fc8b02,RainRat
123,closed,2024-06-03 05:22:44,2024-06-03 05:34:30,2024-06-03 05:23:50,,For lasse,,https://github.com/tukaani-project/xz/pull/123,https://api.github.com/repos/tukaani-project/xz/issues/123,c9dd55b55607fac5a41d6654510a4fc4c3184511,thesamesam
120,open,2024-05-02 04:06:00,2024-05-30 10:06:52,,,WIP: meson build,,https://github.com/tukaani-project/xz/pull/120,https://api.github.com/repos/tukaani-project/xz/issues/120,98e5df5db7a5b934efccf46e9f1f547f23700feb,vtorri
118,closed,2024-05-01 21:13:14,2024-12-22 18:04:36,2024-12-18 15:32:01,,Mask control characters in filenames,"The command line tools print filenames and some other user-specified strings to standard output or standard error. Malicious strings, for example, from filenames could contain control characters that affect the state of the terminal.

These commits add a function to replace the single-byte control characters with question marks. This is simple but hopefully good enough in practice.",https://github.com/tukaani-project/xz/pull/118,https://api.github.com/repos/tukaani-project/xz/issues/118,,Larhzu
117,closed,2024-05-01 05:00:11,2024-05-01 11:18:55,2024-05-01 11:18:55,,Update SECURITY.md,"Added the requirement to include security info, reproduction steps, estimated severity and encouraging people to report the issue publicly.",https://github.com/tukaani-project/xz/pull/117,https://api.github.com/repos/tukaani-project/xz/issues/117,1fd5795a5ba75a102aefd7a160d758dbc91f9647,JohnDoe1001
116,closed,2024-04-25 21:56:54,2024-06-03 09:35:29,2024-06-03 09:35:29,,CI: actually fail on FreeBSD,"Without ""set -e"" the job will always be successful.

See vmactions/freebsd-vm#72

/cc @thesamesam",https://github.com/tukaani-project/xz/pull/116,https://api.github.com/repos/tukaani-project/xz/issues/116,551a155337a3c36f1c06109595cdd62c0bf5d84a,junghans
115,closed,2024-04-24 23:25:38,2024-06-03 09:36:24,2024-06-03 09:35:28,,Updated actions,,https://github.com/tukaani-project/xz/pull/115,https://api.github.com/repos/tukaani-project/xz/issues/115,5dac6df4dea51b82a8fe58559941e432e1297979,radarhere
111,closed,2024-04-17 22:01:08,2024-05-01 10:00:56,2024-05-01 10:00:55,,New XZ Logo proposal,"I saw the old 'tainted' Logo for XZ was removed; here is a new Logo proposal in pixelart style combining the letters X and Z in a minimalistic color-coding way in pixel and 8x resolution. If you like this idea I might do an SVG version aswell. As for License do what you want, as by German law I would still own the copyright, but the Logo is minimalistic enough that I would assume it any License you as Maintainers want.",https://github.com/tukaani-project/xz/pull/111,https://api.github.com/repos/tukaani-project/xz/issues/111,53739e9aecb62d3eeb48c3c11c7b6ca8b77fac7a,Sur3
109,closed,2024-04-15 05:21:43,2024-04-15 05:31:25,2024-04-15 05:31:25,,test,,https://github.com/tukaani-project/xz/pull/109,https://api.github.com/repos/tukaani-project/xz/issues/109,b6acb6945790ffa60405fcd33733e6367b4013cb,thesamesam
108,closed,2024-04-13 00:31:50,2024-04-15 00:45:26,2024-04-13 15:49:05,2024-04-13 15:49:05,CI: Use only the active CPUs on macOS,`hw.ncpu` counts all CPUs including inactive ones. `hw.activecpu` counts only the active CPUs.,https://github.com/tukaani-project/xz/pull/108,https://api.github.com/repos/tukaani-project/xz/issues/108,97f0ee0f1f903f4e7c4ea23e9b89d687025d2992,ryandesign
106,closed,2024-04-11 16:32:59,2024-07-14 18:45:51,2024-05-01 11:38:17,,A reborn of the project with Markdown based docs,"First of all, I'm really sorry for what happened, and the original author didn't deserve all this.

XZ is a modern tool (2016 first release I think?) yet all docs is in ASCII text files. While I admire and fond of good old plain ASCII text, but we also shouldn't let the chance of utilizing the modern Markdown features slip.

Currently, I've added the markdown only for README (old one's intact). If I get a green-light, I might also convert other ASCII plain text files into Markdown (while keeping the ASCII one's of course).

I'm creating this PR as a draft, as only README is in Markdown and not every docs' file.

Also, best of luck. I (and many others) believe in this project.",https://github.com/tukaani-project/xz/pull/106,https://api.github.com/repos/tukaani-project/xz/issues/106,0070f69f02e88ce734537ecfb74a5877d46a2d06,KRTirtho
97,closed,2024-03-29 22:32:58,2024-05-01 10:31:30,2024-03-29 22:50:23,,Reflect real changelog in NEWS,Documentation improvements,https://github.com/tukaani-project/xz/pull/97,https://api.github.com/repos/tukaani-project/xz/issues/97,7ea5e40d8ba8c3b8e2eccc5e37316615cad99aed,oswalpalash
95,closed,2024-03-29 21:18:50,2024-05-01 10:22:44,2024-04-05 09:28:41,,Revert malicious commits,"Some of them claim to fix actual bugs and/or improve test coverage, but it's unclear to me if they're bugs in the actual XZ project, or if they're fallout from the backdoor.

For this kind of situation, I'd rather err on the side of deleting too much. If they were helpful, the bugs can be re-reported and re-fixed.

I only checked up to and including https://github.com/tukaani-project/xz/commits?author=JiaT75&after=af071ef7702debef4f1d324616a0137a5001c14c+104 ; everything on that page looks clean to me, so I believe the user only became malicious somewhere after that point.",https://github.com/tukaani-project/xz/pull/95,https://api.github.com/repos/tukaani-project/xz/issues/95,ac14ccaf817ae24cc89dfabfcb6d9301ff529f6e,Alcaro
93,closed,2024-03-29 18:39:58,2024-05-01 11:01:08,2024-05-01 10:42:10,,codespell: Ignore THANKS file and debbugs.gnu.org url + GitHub action,This way  `codespell -i 0`  is silent and feasible to CI for typos -- added github action.,https://github.com/tukaani-project/xz/pull/93,https://api.github.com/repos/tukaani-project/xz/issues/93,156b20a4e417cf8b265f3fed17ad7869cbd17f3b,yarikoptic
91,closed,2024-03-13 13:06:26,2024-03-20 19:04:08,2024-03-20 19:04:08,,liblzma: Fix building with NVHPC (NVIDIA HPC SDK).,"NVHPC compiler has several issues that make it impossible to build liblzma:
  - the compiler cannot handle unions that contain pointers that are not the first members (in some cases);
  - the compiler cannot handle the assembler code in range_decoder.h (LZMA_RANGE_DECODER_CONFIG has to be set to zero);
  - the compiler fails to produce valid code for delta_decode if the vectorization is enabled, which results in failed tests.

This introduces NVHPC-specific workarounds that address the issues.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [x] Other (please describe): workarounds for the compiler


## What is the current behavior?
It's not possible to build and get the tests pass with any existing release of the NVHPC compiler even when configuring as follows:
```console
$ ./configure --disable-symbol-versions CPPFLAGS='-DLZMA_RANGE_DECODER_CONFIG=0' CFLAGS='-O'
```
(`-O` is the same as the default `-O2` but without SIMD)


## What is the new behavior?
It is possible to build and get the tests pass with any existing release of the NVHPC compiler when configuring as follows:
```console
$ ./configure --disable-symbol-versions
```

## Does this introduce a breaking change?

- [ ] Yes
- [x] No


## Other information

I don't know if there is any interest in supporting NVHPC and I'd understand if there's none.",https://github.com/tukaani-project/xz/pull/91,https://api.github.com/repos/tukaani-project/xz/issues/91,41fe3474aaaf8c41917a016db7aee8231a90d4ea,skosukhin
90,closed,2024-03-13 11:53:44,2024-05-14 11:50:04,2024-03-20 19:04:53,,Build: Let the users override the symbol versioning variant.,"There are cases when the users want to decide themselves whether they want to have the generic (even on GNU/Linux) or the linux (even if we do not recommend that) symbol versioning variant. The former might be needed to circumvent compiler issues (i.e. the compiler does not support all features that are required for the linux versioning), the latter might help in overriding the assumptions made in the configure script.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [x] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
It's not possible to override the symbol versioning variant on GNU/Linux:
```console
$ ./configure --enable-symbol-versions=auto | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=yes | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=no | grep 'library symbol versioning'
checking if library symbol versioning should be used... no
$ ./configure --enable-symbol-versions=linux | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=generic | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=something-else | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions --disable-shared | grep 'library symbol versioning'
checking if library symbol versioning should be used... no (not building a shared library)
$ ./configure --with-pic | grep 'library symbol versioning'
checking if library symbol versioning should be used... 
configure: error: 
    On GNU/Linux, building both shared and static library at the same time
    is not supported if --with-pic or --without-pic is used.
    Use either --disable-shared or --disable-static to build one type
    of library at a time. If both types are needed, build one at a time,
    possibly picking only src/liblzma/.libs/liblzma.a from the static build.
```

## What is the new behavior?
It is possible to override the symbol versioning variant:
```console
$ ./configure --enable-symbol-versions=auto | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=yes | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=no | grep 'library symbol versioning'
checking if library symbol versioning should be used... no
$ ./configure --enable-symbol-versions=linux | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (linux)
$ ./configure --enable-symbol-versions=generic | grep 'library symbol versioning'
checking if library symbol versioning should be used... yes (generic)
$ ./configure --enable-symbol-versions=something-else | grep 'library symbol versioning'
checking if library symbol versioning should be used... 
configure: error: unknown symbol versioning variant 'something-else'
$ ./configure --enable-symbol-versions --disable-shared | grep 'library symbol versioning'
checking if library symbol versioning should be used... no (not building a shared library)
$ ./configure --with-pic | grep 'library symbol versioning'
checking if library symbol versioning should be used... 
configure: error: 
    On GNU/Linux, building both shared and static library at the same time
    is not supported if --with-pic or --without-pic is used.
    Use either --disable-shared or --disable-static to build one type
    of library at a time. If both types are needed, build one at a time,
    possibly picking only src/liblzma/.libs/liblzma.a from the static build.
```

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

## Other information

It looks like `--enable-symbol-versions=generic` was an unintended feature that existed before 0682439.",https://github.com/tukaani-project/xz/pull/90,https://api.github.com/repos/tukaani-project/xz/issues/90,ac7eea0c8a3046d46a2f516ad1b4b2c280f52b21,skosukhin
87,closed,2024-02-25 14:16:11,2024-02-26 15:36:04,2024-02-26 15:36:04,2024-02-26 15:36:04,xz: Add missing RISC-V on the filter list in the man page,"## Pull request checklist

- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [x] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
The RISC-V filter option should be listed in the man page but not.


## What is the new behavior?
List the RISC-V filter.

## Does this introduce a breaking change?

- [ ] Yes
- [x] No


## Other information

The translation is not handled yet.
Currently running po4a/update-po upon commit 5d8d915ebe2e345820a0f54d1baf8d7d4824c0c7 generates changes of over 455 lines and I'm sure sure if they are really needed. Plus, I'm not familiar with the po4a tools so help is needed. ",https://github.com/tukaani-project/xz/pull/87,https://api.github.com/repos/tukaani-project/xz/issues/87,eee579fff50099ba163c12305e81a4bd42b7dd53,ivq
86,closed,2024-02-25 12:26:01,2024-07-01 15:01:16,2024-04-12 10:07:03,,Speed up CRC32 calculation on LoongArch,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [x] Feature

## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->

On LoongArch the generic table-based CRC32 implementation is used.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: None


## What is the new behavior?

The crc.w.{b/h/w/d}.w instructions in LoongArch can calculate the CRC32 result for 1/2/4/8 bytes in a single operation, making the use of LoongArch CRC32 instructions much faster compared to the general CRC32 algorithm.

Optimized CRC32 will be enabled if the kernel declares the LoongArch CRC32 instructions supported via AT_HWCAP.

## Does this introduce a breaking change?

- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/86,https://api.github.com/repos/tukaani-project/xz/issues/86,bdf40a08b076abeddc5ce21738f1fb84bcc9570c,xry111
80,closed,2024-02-16 21:02:20,2024-02-17 14:31:22,2024-02-17 14:31:22,,liblzma/rangecoder: Exclude x32 from the x86-64 optimisation.,"The x32 port has a x86-64 ABI in term of all registers but uses only 32bit pointer like x86-32. The assembly optimisation fails to compile on x32. Given the state of x32 I suggest to exclude it from the optimisation rather than trying to fix it.

## Pull request type

Please check the type of change your PR introduces:
- [X] Bugfix

## What is the current behavior?
https://buildd.debian.org/status/fetch.php?pkg=xz-utils&arch=x32&ver=5.5.2beta-1&stamp=1708036388&raw=0

```
In file included from ../../../../src/liblzma/lzma/lzma_decoder.c:17:
In function ‘lzma_decode’,
    inlined from ‘lzma_decode’ at ../../../../src/liblzma/lzma/lzma_decoder.c:235:1:
../../../../src/liblzma/rangecoder/range_decoder.h:644:9: error: invalid 'asm': operand is not a condition code, invalid operand code 'c'
  644 |         __asm__( \
      |         ^~~~~~~
../../../../src/liblzma/rangecoder/range_decoder.h:671:9: note: in expansion of macro ‘rc_asm_bittree_n’
  671 |         rc_asm_bittree_n(probs_base_var, final_add, \
      |         ^~~~~~~~~~~~~~~~
../../../../src/liblzma/lzma/lzma_decoder.c:75:17: note: in expansion of macro ‘rc_bittree3’
   75 |                 rc_bittree3(ld.low[pos_state], \
      |                 ^~~~~~~~~~~
../../../../src/liblzma/lzma/lzma_decoder.c:421:25: note: in expansion of macro ‘len_decode_fast’
  421 |                         len_decode_fast(len, coder->match_len_decoder,
      |                         ^~~~~~~~~~~~~~~
../../../../src/liblzma/rangecoder/range_decoder.h:644:9: error: invalid 'asm': operand is not a condition code, invalid operand code 'c'
…
```



## Does this introduce a breaking change?

- [ ] Yes
- [X] No",https://github.com/tukaani-project/xz/pull/80,https://api.github.com/repos/tukaani-project/xz/issues/80,50b006482739e65d4db06aa36d850a5682bed424,sebastianas
77,closed,2024-01-09 09:38:00,2024-02-01 12:52:49,2024-02-01 12:52:49,,Speed up CRC32 calculation on ARM64,"The CRC32 instructions in ARM64 can calculate the CRC32 result for 8 bytes in a single operation, making the use of ARM64 instructions much faster compared to the general CRC32 algorithm.

Optimized CRC32 will be enabled if ARM64 has CRC extension running on Linux.

## Pull request checklist

Please check if your PR fulfills the following requirements:

- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:

- [ ] Bugfix
- [x] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?

<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?

<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Enable optimized CRC32 algorithm if ARM64 support CRC extension.
  -
  -

## Does this introduce a breaking change?

- [ ] Yes
- [ ] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

Benchmark data will be updated soon",https://github.com/tukaani-project/xz/pull/77,https://api.github.com/repos/tukaani-project/xz/issues/77,d9fcfb3cd3aba3755c895af3f9c87e8386964b87,parheliamm
75,closed,2023-12-19 01:29:31,2023-12-28 16:54:13,2023-12-28 16:54:12,,Performance improvements on ARM64,"## Pull request checklist

Please check if your PR fulfills the following requirements:

- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:

- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [x] Build related changes
- [ ] Documentation content changes
- [x] Other (please describe): 


## What is the current behavior?

<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?

<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Change LZMA_MEMCMPLEN_EXTRA to 8 on ARM64
- select enable-unsafe-type-punning if enable_unaligned_access enabled
  -

## Does this introduce a breaking change?

- [ ] Yes
- [ ] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->

Performance improvements on ARM64 with 2 commits:

    vanilla:
    Compressor name         Compress. Decompress. Compr. size  Ratio Filename
    memcpy                   5102 MB/s  5183 MB/s   211957760 100.00 silesia.tar
    xz 5.2.5 -0              15.9 MB/s  51.6 MB/s    62579868  29.52 silesia.tar
    xz 5.2.5 -1              11.8 MB/s  57.5 MB/s    58408297  27.56 silesia.tar
    xz 5.2.5 -2              7.53 MB/s  59.9 MB/s    56708167  26.75 silesia.tar
    xz 5.2.5 -3              5.02 MB/s  61.6 MB/s    55745576  26.30 silesia.tar
    xz 5.2.5 -4              3.15 MB/s  62.7 MB/s    52106950  24.58 silesia.tar
    xz 5.2.5 -5              2.29 MB/s  65.1 MB/s    49960648  23.57 silesia.tar
    xz 5.2.5 -6              1.94 MB/s  65.5 MB/s    49196155  23.21 silesia.tar
    xz 5.2.5 -7              1.83 MB/s  65.7 MB/s    48926731  23.08 silesia.tar
    xz 5.2.5 -8              1.87 MB/s  66.4 MB/s    48768992  23.01 silesia.tar
    xz 5.2.5 -9              1.85 MB/s  66.5 MB/s    48747544  23.00 silesia.tar



Patched:

```
Compressor name         Compress. Decompress. Compr. size  Ratio Filename
memcpy                   5209 MB/s  5265 MB/s   211957760 100.00 silesia.tar
xz 5.2.5 -0              16.4 MB/s  51.9 MB/s    62579868  29.52 silesia.tar
xz 5.2.5 -1              12.0 MB/s  57.8 MB/s    58408297  27.56 silesia.tar
xz 5.2.5 -2              8.26 MB/s  60.2 MB/s    56708167  26.75 silesia.tar
xz 5.2.5 -3              5.14 MB/s  61.6 MB/s    55745576  26.30 silesia.tar
xz 5.2.5 -4              3.29 MB/s  62.7 MB/s    52106950  24.58 silesia.tar
xz 5.2.5 -5              2.42 MB/s  64.9 MB/s    49960648  23.57 silesia.tar
xz 5.2.5 -6              2.03 MB/s  65.6 MB/s    49196155  23.21 silesia.tar
xz 5.2.5 -7              1.93 MB/s  65.6 MB/s    48926731  23.08 silesia.tar
xz 5.2.5 -8              1.94 MB/s  66.3 MB/s    48768992  23.01 silesia.tar
xz 5.2.5 -9              1.91 MB/s  66.4 MB/s    48747544  23.00 silesia.tar
done... (cIters=1 dIters=1 cTime=1.0 dTime=2.0 chunkSize=1706MB cSpeed=0MB)
```

",https://github.com/tukaani-project/xz/pull/75,https://api.github.com/repos/tukaani-project/xz/issues/75,3d5f9ac24fc72a6933485e0a92cd1b95947176f3,parheliamm
74,closed,2023-11-30 13:47:26,2023-12-01 03:53:37,2023-11-30 15:08:05,2023-11-30 15:08:05,Docs: Fix typos,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [x] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Typos fixes of `codespell`.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Found new typos via `typos --hidden --format brief`
-
-

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/74,https://api.github.com/repos/tukaani-project/xz/issues/74,3b3023e00b0071e10f589bbc3674e0ec432b8add,kianmeng
73,closed,2023-11-28 12:06:38,2023-12-07 12:12:09,2023-12-07 12:09:42,,Improve existing oss-fuzz coverage,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [x] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: N/A


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Total number of fuzzers increased from 1 to 12
- 6 new fuzzers for decompressing supported archive types
- 5 new fuzzers for compressing data into supported archive types
- Added LZMA Raw test files based on the existing `.lzma` ones

## Does this introduce a breaking change?

- [x] Yes
- [ ] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->
This pull request will temporarily break existing oss-fuzz setup until the `oss-fuzz` repo accepts [a corresponding pull request](https://github.com/google/oss-fuzz/pull/11279) with the updated fuzzer configuration on their side.

## Other information

<!-- Any other information that is important to this PR. -->
The improvements to the fuzzing setup were made as a part of Google ISE project.",https://github.com/tukaani-project/xz/pull/73,https://api.github.com/repos/tukaani-project/xz/issues/73,e895e684387cf2952da65f7e6325377722bde9f1,mvatsyk-lsg
69,closed,2023-10-31 18:22:21,2023-10-31 19:42:09,2023-10-31 19:42:09,,Fix missing semicolon,"```
fastpos.h:94:28: error: expected ';' before 'extern'
   94 | lzma_attr_visibility_hidden
      |                            ^
      |                            ;
   95 | extern const uint8_t lzma_fastpos[1 << FASTPOS_BITS];
      | ~~~~~~
```

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

-
-
-

## Does this introduce a breaking change?

- [ ] Yes
- [ ] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/69,https://api.github.com/repos/tukaani-project/xz/issues/69,93c487dfd060816c4b005ff0438352b1a13b69c8,Jamaika1
67,closed,2023-10-12 12:35:31,2023-10-17 16:38:17,2023-10-13 12:03:14,2023-10-13 12:03:14,[Feature Request]: Reference actions by commit SHA,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [x] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
Referencing actions by major tag (e.g. `v3`)


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/tukaani-project/xz/issues/65
Resolves https://github.com/tukaani-project/xz/issues/65

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
Referencing actions by commit SHA (e.g. `8ade135a41bc03ea155e62e844d188df1ea18608`)

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/67,https://api.github.com/repos/tukaani-project/xz/issues/67,37947d4a7565b87e4cec8b89229d35b0a3f8d2cd,gabibguti
66,closed,2023-09-26 16:35:37,2023-09-27 18:39:24,2023-09-26 17:54:41,,[Feature Request]: Reference actions by commit SHA,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass

## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [x] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Referencing actions by major tag (e.g. `v3`)

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/tukaani-project/xz/issues/65


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

Referencing actions by commit SHA (e.g. `8ade135a41bc03ea155e62e844d188df1ea18608`)

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/66,https://api.github.com/repos/tukaani-project/xz/issues/66,ccdaca334a4ec108a3dda17d8eacd413f5da0575,gabibguti
64,closed,2023-09-25 19:53:53,2024-04-16 10:20:08,2023-10-13 12:54:05,2023-10-13 12:54:05,Crc32 clmul,"Added an implementation for crc32 that makes use of clmul.
Code for this implementation was written by Ilya Kurdyukov and can be found here.
https://github.com/ilyakurdyukov/crc-clmul-sim

Also refactored crc64_clmul to use the new macros created for crc32_clmul.
As well as moved similar functions to crc_clmul_common to eliminate duplicate code.

I tested this on files doubling in size starting from 1 byte up to 1 Gigabyte.
During testing I found that crc32_clmul can run up to 70% faster than crc32_generic,
and has an average speed increase of 58.4% for sizes greater than 16 bytes.

I also used this to test the reworked version of crc64_clmul.
This version of crc64_clmul is an average of 3.9% faster than the original implementation.
This speed increase is due to some inline assembly as well as changing around the order of some if statements. 


## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [X] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [X] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
crc32\_fast currently only uses a generic implementation.


## What is the new behavior?
I added an implementation for crc32 that makes use of clmul in crc32_fast.c 
Also refactored crc64_clmul implementation to use the same macros as crc32_clmul


## Does this introduce a breaking change?

- [ ] Yes
- [X] No


## Other information

Here is the output from both tests that gave me the statistics above.

the number of unique files tested on and the number of times the crc is run
decrease as the bytes get larger so the benchmark does not take too long.

The 64 and 32 spd+ show the percentage speed increase over the generic.
The percentage on the graph show the combined average for all types.
For example (50% is twice as fast, 200% is twice as slow)
```
64 generic: #		64 clmul: +
32 generic: =		32 clmul: *

#bytes, #files,   #crc's,  64spd+,  32spd+: 0%          50%          100%        150%         200%
    16,  30000, 20648881,  39.96%,  24.24%: |           |      +*    | =    #    |            |
    32,  30000, 12782640,  55.79%,  36.26%: |           |   +*       |  =        #            |
    64,  30000,  7255012,  72.19%,  50.27%: |           +*           | =         |       #    |
   128,  30000,  3890368,  82.53%,  69.13%: |       +*  |            |    =      |            |#
   256,  30000,  2018311,  82.19%,  68.21%: |        +  |            |   =       |            |#
   512,  30000,  1028488,  79.37%,  63.75%: |         + |            |  =        |            #
    1K,  30000,   519217,  78.11%,  62.22%: |         + |            |   =       |           #|
    2K,  30000,   260870,  76.74%,  61.71%: |          +|            |  =        |          # |
    4K,  30000,   130752,  76.78%,  60.15%: |          +|            |  =        |          # |
    8K,  30000,    65456,  76.24%,  60.59%: |          +|            |  =        |          # |
   16K,  30000,    32748,  76.66%,  60.03%: |          +|            |  =        |          # |
   32K,  30000,    16379,  76.78%,  60.04%: |          +|            |  =        |          # |
   64K,  16384,     8190,  76.62%,  59.76%: |          +|            |  =        |          # |
  128K,   8192,     4095,  76.52%,  59.71%: |          +|            |  =        |          # |
  256K,   4096,     2047,  76.32%,  59.78%: |          +|            |  =        |          # |
  512K,   2048,     1023,  84.70%,  60.09%: |        +  |         =  |           |            |       #
    1M,   1024,      511,  76.71%,  60.29%: |          +|            |  =        |          # |
    2M,    512,      255,  76.47%,  59.96%: |          +|            |  =        |          # |
    4M,    256,      127,  76.42%,  60.03%: |          +|            |  =        |          # |
    8M,    128,       63,  76.33%,  60.22%: |          +|            |  =        |          # |
   16M,     64,       31,  76.55%,  60.23%: |          +|            |  =        |          # |
   32M,     32,       15,  76.14%,  60.66%: |          +|            |  =        |          # |
   64M,     16,       10,  76.53%,  59.99%: |          +|            |  =        |          # |
  128M,      8,       10,  76.27%,  60.28%: |          +|            |  =        |          # |
  256M,      4,       10,  76.42%,  59.96%: |          +|            |  =        |          # |
  512M,      2,       10,  76.45%,  60.23%: |          +|            |  =        |          # |
    1G,      1,       10,  76.64%,  60.19%: |          +|            |  =        |          # |
total average:             75.13%,  58.44%

```


The 64old and 64new spd+ show the percentage speed increase over the generic.
The percentage on the graph show the combined average for all types.
```
64 generic: #     64 clmul old: +     64 clmul new: *

#bytes, #files,   #crc's, old64spd+, new64spd+: 0%          50%          100%        150%         200%
     1,  30000, 48806446,  -97.328%,  -88.708%, |           | #          | * +       |            |
     2,  30000, 44739242,  -57.943%,  -48.621%, |           |     #      |* +        |            |
     4,  30000, 38347922,   -9.964%,   -4.811%, |           |          #*|+          |            |
     8,  30000, 29826161,   -0.558%,    3.477%, |           |           *+           |            |
    16,  30000, 20648881,   39.017%,   41.582%, |           |        +   |         # |            |
    32,  30000, 12782640,   54.057%,   54.848%, |           |      +     |           |    #       |
    64,  30000,  7255012,   69.551%,   70.777%, |           |  *+        |           |            | #
   128,  30000,  3890368,   81.047%,   81.603%, |          *+            |           |            |            #
   256,  30000,  2018311,   81.129%,   81.619%, |          +|            |           |            |           #
   512,  30000,  1028488,   77.798%,   79.257%, |           *+           |           |            |         #
    1K,  30000,   519217,   75.448%,   77.138%, |           |*+          |           |            |       #
    2K,  30000,   260870,   73.763%,   75.518%, |           |*+          |           |            |     #
    4K,  30000,   130752,   73.392%,   75.773%, |           |* +         |           |            |     #
    8K,  30000,    65456,   74.341%,   76.026%, |           |*+          |           |            |      #
   16K,  30000,    32748,   68.951%,   70.712%, |           |  *+        |           |            | #
   32K,  30000,    16379,   73.761%,   76.129%, |           |*+          |           |            |      #
   64K,  16384,     8190,   74.789%,   76.561%, |           |*+          |           |            |      #
  128K,   8192,     4095,   74.834%,   75.900%, |           |*+          |           |            |      #
  256K,   4096,     2047,   74.508%,   76.488%, |           |*+          |           |            |      #
  512K,   2048,     1023,   74.781%,   75.998%, |           |*+          |           |            |      #
    1M,   1024,      511,   74.523%,   76.610%, |           |*+          |           |            |      #
    2M,    512,      255,   74.871%,   76.690%, |           |*+          |           |            |      #
    4M,    256,      127,   74.656%,   76.658%, |           |*+          |           |            |      #
    8M,    128,       63,   74.151%,   76.085%, |           |*+          |           |            |      #
   16M,     64,       31,   74.802%,   76.263%, |           |*+          |           |            |      #
   32M,     32,       15,   74.671%,   76.244%, |           |*+          |           |            |      #
   64M,     16,       10,   74.626%,   76.459%, |           |*+          |           |            |      #
  128M,      8,       10,   74.738%,   76.497%, |           |*+          |           |            |      #
  256M,      4,       10,   74.395%,   76.110%, |           |*+          |           |            |      #
  512M,      2,       10,   74.904%,   76.549%, |           |*+          |           |            |      #
    1G,      1,       10,   74.709%,   76.477%, |           |*+          |           |            |      #
total average:              57.949%,   60.255%, 
speed increase new vs old:  3.979%
```
",https://github.com/tukaani-project/xz/pull/64,https://api.github.com/repos/tukaani-project/xz/issues/64,f1cd9d7194f005cd66ec03c6635ceae75f90ef17,hansjans162
63,closed,2023-09-15 21:06:09,2023-09-21 22:12:40,2023-09-21 22:12:37,,Fix getopt.in.h for MSVC,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->

cmake build with MSVC failed as ""getopt.in.h"" included <unistd.h> which does not exist for MSVC.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

cmake build with MSVC succeeded.

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/63,https://api.github.com/repos/tukaani-project/xz/issues/63,0fab2530055175d706095750d315505d1702f3da,kiyolee
60,closed,2023-08-26 00:21:40,2023-09-22 18:27:05,2023-09-06 09:10:46,,Make xz buildable with MSVC and add 64-bit filesize support,"To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass

Note: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.

## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): 

Make xz buildable with MSVC.
Add 64-bit filesize support on Windows.

## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->

xz does not build with MSVC.
xz would refuse to handle files larger than 4 GiB.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

xz can be built with MSVC.
xz can handle files larger than 4 GiB on Windows.


## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->

I have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.
In addition to building xz, I have added support to build all tests as well.
This PR only covers code changes that were done while setting up my own repo.",https://github.com/tukaani-project/xz/pull/60,https://api.github.com/repos/tukaani-project/xz/issues/60,32457da82fc4f20747051eee8e3d3b62f8528a2a,kiyolee
59,closed,2023-08-06 07:04:38,2023-08-08 12:10:40,2023-08-08 12:08:00,2023-08-08 12:08:00,Fix error mythread.h,"```
mythread.h:381:48: error: 'once' undeclared (first use in this function); did you mean 'once_'?
  381 |                         if (!InitOnceComplete(&once, 0, NULL)) \
      |                                                ^~~~
crc64_small.c:47:9: note: in expansion of macro 'mythread_once'
   47 |         mythread_once(crc64_init);
      |         ^~~~~~~~~~~~~
```

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

-
-
-

## Does this introduce a breaking change?

- [ ] Yes
- [ ] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/59,https://api.github.com/repos/tukaani-project/xz/issues/59,6bf33b704cd31dccf25e68480464aa22d3fcad5a,Jamaika1
58,closed,2023-07-29 11:18:45,2023-08-01 17:36:12,2023-07-31 12:02:21,2023-07-31 12:02:21,Fix typos found by codespell,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [x] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?

Typos.

## What is the new behavior?

Fixed typos.

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/58,https://api.github.com/repos/tukaani-project/xz/issues/58,42df7c7aa1cca385e509eb33c65136e61890f0bf,DimitriPapadopoulos
57,closed,2023-07-27 12:23:12,2023-09-25 04:12:50,2023-08-01 15:26:43,,Support build target `wasm32-unknown-unknown` in clang when `ENABLE_THREADS=OFF`,"Thanks for the review #56 yesterday!

I tried another approach, could you please review this one?

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [x] Refactoring (no functional changes, no api changes)
- [x] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
```
$ mkdir build && cd build
$ cmake .. -DENABLE_THREADS=OFF
$ make liblzma
[  0%] Building C object CMakeFiles/liblzma.dir/src/common/tuklib_physmem.c.obj                                       
[  1%] Building C object CMakeFiles/liblzma.dir/src/liblzma/check/check.c.obj                                         
In file included from /xz/src/liblzma/check/check.c:13:                                                               
In file included from /xz/src/liblzma/check/check.h:16:                                                               
In file included from /xz/src/liblzma/common/common.h:17:
In file included from /xz/src/common/mythread.h:84:
/wasi-sysroot/include/signal.h:2:2: error: ""wasm lacks signal support; to enable minimal signal emulation, compile with -D_WASI_EMULATED_SIGNAL and link with -lwasi-emulated-signal""
#error ""wasm lacks signal support; to enable minimal signal emulation, \
 ^
In file included from /xz/src/liblzma/check/check.c:13:
In file included from /xz/src/liblzma/check/check.h:16:
In file included from /xz/src/liblzma/common/common.h:17:
/xz/src/common/mythread.h:87:33: error: unknown type name 'sigset_t'
mythread_sigmask(int how, const sigset_t *restrict set,
                                ^
/xz/src/common/mythread.h:88:3: error: unknown type name 'sigset_t'
                sigset_t *restrict oset)
                ^
/xz/src/common/mythread.h:90:12: error: call to undeclared function 'sigprocmask'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
        int ret = sigprocmask(how, set, oset);
                  ^
4 errors generated.
make[3]: *** [CMakeFiles/liblzma.dir/build.make:90: CMakeFiles/liblzma.dir/src/liblzma/check/check.c.obj] Error 1
make[2]: *** [CMakeFiles/Makefile2:139: CMakeFiles/liblzma.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:146: CMakeFiles/liblzma.dir/rule] Error 2
make: *** [Makefile:179: liblzma] Error 2
```

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 
#56 

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Changed to exclude signal functions not supported by WebAssembly, using the predefined `__wasm__` macro when the build target is set to wasm32 with clang.
This change allows `liblzma` to be built with the platform-independent `wasm32-uknown-unknown` target.
I believe this exclusion will work in the same way as the build when targeting Windows, so it will minimize unexpected changes.

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

Build tested on docker

`Dockerfile`
```docker
FROM ghcr.io/webassembly/wasi-sdk:latest

RUN apt update && apt install -y git

RUN git clone https://github.com/ChanTsune/xz.git

RUN mkdir -p ./xz/build

RUN cd xz && git fetch && git switch feature/liblzma/wasm

WORKDIR /xz/build

RUN cmake .. -DENABLE_THREADS=OFF

RUN CFLAGS=""-target wasm32-unknown-unknown"" make liblzma
```

```sh
$ docker build -t xz .
```

If you need, you can see the predefined macros when targeting wasm32 in clang by following commands
```
$ clang -E -dM -target wasm32-unknown-unknown -x c /dev/null
```
or if you want to check with the latest wasi-sdk clang
```sh
$ docker image pull ghcr.io/webassembly/wasi-sdk
$ docker run --rm -i ghcr.io/webassembly/wasi-sdk clang-16 -E -dM -target wasm32-unknown-unknown -x c /dev/null
```
",https://github.com/tukaani-project/xz/pull/57,https://api.github.com/repos/tukaani-project/xz/issues/57,d366205966631c1f7b3db8d908a6bb86885e1f0e,ChanTsune
56,closed,2023-07-26 13:10:20,2023-07-28 11:58:01,2023-07-27 11:38:40,,liblzma: Support wasi-sdk with `ENABLE_THREADS=OFF` option,"Hi! tukaani-project members!

In the process of my personal project, I made it possible to compile liblzma with WebAssembly as the target, so please use it if you like.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [x] Refactoring (no functional changes, no api changes)
- [x] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Build failed with rust+wasi-sdk.
```
""clang"" ""-O0"" ""-ffunction-sections"" ""-fdata-sections"" ""-fPIC"" ""-g"" ""-fno-omit-frame-pointer"" ""--target=wasm32-wasi"" ""--sysroot"" ""/wasi-sdk-20.0/share/wasi-sysroot"" ""-D_WASI_EMULATED_SIGNAL"" ""-I"" ""xz-5.2/src/liblzma/api"" ""-I"" ""xz-5.2/src/liblzma/lzma"" ""-I"" ""xz-5.2/src/liblzma/lz"" ""-I"" ""xz-5.2/src/liblzma/check"" ""-I"" ""xz-5.2/src/liblzma/simple"" ""-I"" ""xz-5.2/src/liblzma/delta"" ""-I"" ""xz-5.2/src/liblzma/common"" ""-I"" ""xz-5.2/src/liblzma/rangecoder"" ""-I"" ""xz-5.2/src/common"" ""-I"" ""/xz2-rs/lzma-sys"" ""-std=c99"" ""-pthread"" ""-DHAVE_CONFIG_H=1"" ""-o"" ""/xz2-rs/target/wasm32-wasi/debug/build/lzma-sys-7bbeecf3b4119da3/out/xz-5.2/src/liblzma/check/check.o"" ""-c"" ""xz-5.2/src/liblzma/check/check.c""
  cargo:warning=In file included from xz-5.2/src/liblzma/check/check.c:13:
  cargo:warning=In file included from xz-5.2/src/liblzma/check/check.h:16:
  cargo:warning=In file included from xz-5.2/src/liblzma/common/common.h:17:
  cargo:warning=xz-5.2/src/common/mythread.h:146:12: warning: call to undeclared function 'pthread_sigmask'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
  cargo:warning=        int ret = pthread_sigmask(how, set, oset);
  cargo:warning=                  ^
  cargo:warning=xz-5.2/src/common/mythread.h:160:2: warning: call to undeclared function 'sigfillset'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
  cargo:warning=        sigfillset(&all);
  cargo:warning=        ^
  cargo:warning=xz-5.2/src/common/mythread.h:162:19: error: use of undeclared identifier 'SIG_SETMASK'
  cargo:warning=        mythread_sigmask(SIG_SETMASK, &all, &old);
  cargo:warning=                         ^
  cargo:warning=xz-5.2/src/common/mythread.h:164:19: error: use of undeclared identifier 'SIG_SETMASK'
  cargo:warning=        mythread_sigmask(SIG_SETMASK, &old, NULL);
  cargo:warning=                         ^
  cargo:warning=2 warnings and 2 errors generated.
  exit status: 1
```

<!-- Related issue this PR addresses, if applicable -->
<!-- Related Issue URL: -->

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Optimize to include `mythread.h` only where necessary
- Build liblzma with `ENABLE_THREADS=OFF` now passes with the latest [wasi-sdk](https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-20)

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/56,https://api.github.com/repos/tukaani-project/xz/issues/56,ad304d8377ec5e9c978470a430c2c76acd34d30d,ChanTsune
53,closed,2023-06-23 10:23:07,2024-04-25 21:50:05,2023-06-27 15:59:41,,Replaced crc64_fast constructor with ifunc,"The ifunc attribute is a cleaner and marginally more performant
mechanism for dynamically choosing a routine at runtime.

The PR contains two parts:
1. The first replaces the crc64 construct with the ifunc resolver.
2. The second modifies the build process to account for the ifunc attribute.

HAVE_FUNC_ATTRIBUTE_IFUNC is set if ifuncs can be built
on the system. glibc has supported ifunc since version 2.11 (2009). Building for older machines
may want to manually disable ifunc support when building.
--disable-ifunc can be used with autotools and
USE_ATTR_IFUNC=OFF can be used with CMake to disable the check for ifunc support.
USE_ATTR_IFUNC defaults to ON for CMake and enable_ifunc defaults to yes for autotools.

More about ifuncs can be read [here](https://sourceware.org/glibc/wiki/GNU_IFUNC) or [here](https://www.agner.org/optimize/optimizing_cpp.pdf#page=142).


## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [X] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
crc64\_fast currently uses the \_\_attribute\_\_ constructor to choose the crc implementation to use.


## What is the new behavior?
I replaced the \_\_attribute\_\_((\_\_constructor\_\_)) with \_\_attribute\_\_((ifunc())) in crc64_fast.c

- The HAVE_FUNC_ATTRIBUTE_IFUNC flag was added to configure.ac
- The USE_ATTR_IFUNC cmake option was added to CMakeLists.txt

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

Functionality should be identical.


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/53,https://api.github.com/repos/tukaani-project/xz/issues/53,8b6c2729de315dcfe9fe437903aa9ba8cb9ead14,hansjans162
52,closed,2023-06-02 08:09:36,2023-06-07 08:55:08,2023-06-07 08:55:07,,tests/Makefile.am: add target of 'build-PROGRAMS',"Add target 'build-PROGRAMS' to only compile the test set under '/tests' and not run locally.
",https://github.com/tukaani-project/xz/pull/52,https://api.github.com/repos/tukaani-project/xz/issues/52,eab1fb5386d3d95170bdc7be1f7223483f6ffd42,duerpei
51,closed,2023-05-31 15:41:50,2023-06-06 13:34:55,2023-06-06 13:32:46,2023-06-06 13:32:46,protect against double find_package,"Boost iostream [uses `find_package` in quiet mode](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#L16) and then [again uses `find_package` with required](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#LL30C1-L30C49). This second call triggers a `add_library cannot create imported target ""ZLIB::ZLIB"" because another target with the same name already exists.`

This can simply be fixed by skipping the alias part on secondary `find_package` runs.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [x] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?

From Boost iostream compilation which finds XZ via config file:

```
CMake Error at C:/Temp/lib/win_x86_64_debug/lib/cmake/zlib/ZLIBConfig.cmake:13 (add_library):
  add_library cannot create imported target ""ZLIB::ZLIB"" because another
  target with the same name already exists.
Call Stack (most recent call first):
  libs/iostreams/CMakeLists.txt:30 (find_package)
  libs/iostreams/CMakeLists.txt:38 (boost_iostreams_option)
```

## What is the new behavior?

`find_package` works on the first and all folloring runs.

## Does this introduce a breaking change?

- [ ] Yes
- [x] No",https://github.com/tukaani-project/xz/pull/51,https://api.github.com/repos/tukaani-project/xz/issues/51,0d94ba69220d894d2a86081821d2d7a89df5a10b,bebuch
47,closed,2023-04-05 17:09:54,2023-04-07 12:08:31,2023-04-07 12:08:30,2023-04-07 12:08:30,Add Security Policy,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [x] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [x] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Not having a Security Policy file.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: Resolves https://github.com/tukaani-project/xz/issues/46


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Add Security Policy file

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->
I've tried to keep the timelines of confirming a vulnerability report and fixing a vulnerability as open as possible. Let me know what you think and if this seems reasonable for maintainence.",https://github.com/tukaani-project/xz/pull/47,https://api.github.com/repos/tukaani-project/xz/issues/47,261cdef916eb047522dc316f712844be0215b2bd,gabibguti
43,closed,2023-03-05 23:55:38,2023-03-11 20:05:51,2023-03-11 17:56:04,,xz: Improve compatibility with systems without capability mode support,"When the kernel is built without capability mode support, or when using an emulator like qemu-user-static that does not translate system calls, these calls will return a negative number and set the errno to ENOSYS. However, this error does not indicate a real programming or runtime error and is generally ignored by base system applications built with capability mode sandboxing.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

Please check the type of change your PR introduces:
- [X] Bugfix

## What is the current behavior?

xz would abort execution with `Failed to enable the sandbox` when capability mode system calls failed, regardless if the host system have capability mode support.

It is advisable that binaries with capability mode sandbox enabled to ignore capability mode errors when they are solely because the system does not have the support, this is done on many applications including OpenSSH and base system utilities.  In fact, FreeBSD have a set of macros called [capsicum_helpers(3)](https://man.freebsd.org/cgi/man.cgi?query=capsicum_helpers&sektion=3) which [wraps](https://cgit.freebsd.org/src/tree/lib/libcapsicum/capsicum_helpers.h#n153) this anti-pattern.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=269185


## What is the new behavior?

xz will ignore sandbox failures caused by the kernel lacking support of capsicum mode.

## Does this introduce a breaking change?

- [ ] Yes
- [X] No


## Other information

The proposed patch modified `cap_*` calls to also check if the failure was caused by the lack of support (ENOSYS) and make it ignore it.  If possible, it's probably reasonable to just use `caph_*` calls found in `capsicum_helpers(3)`.",https://github.com/tukaani-project/xz/pull/43,https://api.github.com/repos/tukaani-project/xz/issues/43,596041a4aa89d935e45f7c5941b764036e9aab29,delphij
42,closed,2023-02-26 11:19:06,2023-02-28 07:50:20,2023-02-27 16:45:14,,project requires c99,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [x] Build was run locally and without warnings or errors
- [x] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [x] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
If the compiler uses a very old c standard as default, it will fail to build


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/microsoft/vcpkg/issues/21680#issuecomment-983342257


## What is the new behavior?
Set the required c standard to C99

## Does this introduce a breaking change?

- [ ] Yes
- [x] No



",https://github.com/tukaani-project/xz/pull/42,https://api.github.com/repos/tukaani-project/xz/issues/42,83c1e7ecdb8e4efe3c347157a70a5c0818a7c2cc,autoantwort
41,closed,2023-02-25 13:44:03,2023-03-23 13:48:57,2023-03-23 13:48:52,2023-03-23 13:48:52,CMake: Allow configuring features as cache variables,"This allows users to change the features they build either in CMakeCache.txt or by using a CMake GUI.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
CMake build cannot have the features changes like check types, match finders, encoders, and decoders.

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Features can be configured in CMake GUI or CMakeCache.txt

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
This will allow CI tests to test the different configurations, similar to the Autotools runners.",https://github.com/tukaani-project/xz/pull/41,https://api.github.com/repos/tukaani-project/xz/issues/41,116e81f002c503d3c3cd12726db8f9116e58ef25,JiaT75
40,closed,2023-02-24 15:59:54,2023-03-01 13:42:55,2023-03-01 13:42:31,2023-03-01 13:42:31,liblzma: Clarify lzma_lzma_preset() documentation in lzma12.h.,"lzma_lzma_preset() does not guarentee that the lzma_options_lzma are usable in an encoder even if it returns false (success). If liblzma is built with default configurations, then the options will always be usable. However if the match finders hc3, hc4, or bt4 are disabled, then the options may not be usable depending on the preset level requested.

The documentation was updated to reflect this complexity, since this behavior was unclear before.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: fixes https://github.com/tukaani-project/xz/issues/37

## Does this introduce a breaking change?

- [ ] Yes
- [X] No",https://github.com/tukaani-project/xz/pull/40,https://api.github.com/repos/tukaani-project/xz/issues/40,f1ab1f6b339d16a53ac53efeb97779ecd2bae70f,JiaT75
39,closed,2023-02-23 14:02:44,2023-03-01 13:51:52,2023-02-24 15:58:14,,lzma_lzma_preset() return failure with unsupported Match Finder,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
lzma_lzma_preset() will return success, even if the preset is unusable with the liblzma build.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: fixes https://github.com/tukaani-project/xz/issues/37


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- lzma_lzma_preset() will check if match finder is supported.
- Tests were updated to skip or pass if the requested preset is not usable.

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
Alternatively, this could be solved with a documentation change if we want to explicitly say that lzma_lzma_preset() does not guarantee that the preset is usable. Based on the current documentation, it seems that lzma_lzma_preset() should only return success if the preset is usable.
",https://github.com/tukaani-project/xz/pull/39,https://api.github.com/repos/tukaani-project/xz/issues/39,54b83adb2eb0b726c336ae74f09585622b774f7f,JiaT75
35,closed,2023-02-14 13:59:43,2023-02-14 16:20:50,2023-02-14 16:20:44,2023-02-14 16:20:44,Minor updates to documentation in index.h,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## Does this introduce a breaking change?

- [ ] Yes
- [X] No",https://github.com/tukaani-project/xz/pull/35,https://api.github.com/repos/tukaani-project/xz/issues/35,9c71db4e884fd49aea3d1e711036bff45ca66487,JiaT75
34,closed,2023-02-12 22:06:00,2023-07-22 10:31:44,2023-07-22 10:31:44,,Enable CI on Windows hosts for autotools,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
No Windows CI at all.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/tukaani-project/xz/issues/18


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- autotools build set for Windows added
- build is using msys2 with UCRT64 toolchain

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->
CMake build part is not provided as part of this PR.

Additional changes:
* bumped checkout action to v3 (not really critical, but I did while trying to understand build failure)
* fixed ""false positive"" uninitialized warning with empty in stream_encoder.c
* fixed missing include in memcmplen.h, because this include is not provided if --disable-threads is requested for build

Windows build run is very slow (comparing to others), but I don't think it could be somehow improved.",https://github.com/tukaani-project/xz/pull/34,https://api.github.com/repos/tukaani-project/xz/issues/34,e3805b4545410a305e2ef15bf8aa70b68cff64f9,arixmkii
33,closed,2023-02-08 13:45:44,2023-02-23 12:28:05,2023-02-23 12:27:59,2023-02-23 12:27:59,Improve documentation in container.h ,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## Does this introduce a breaking change?

- [X] Yes
- [ ] No",https://github.com/tukaani-project/xz/pull/33,https://api.github.com/repos/tukaani-project/xz/issues/33,fa9065fac54194fe0407fc7f0cc9633fdce13c21,JiaT75
32,closed,2023-02-07 16:47:02,2023-02-21 12:27:28,2023-02-21 12:27:28,,Detect symver attribute support,"On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.

Support for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].

Add a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.

[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [ ] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [x] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
builds targeting the microblaze fail

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Builds now succeed

## Does this introduce a breaking change?

- [ ] Yes
- [x] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

I tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/32,https://api.github.com/repos/tukaani-project/xz/issues/32,e4ca3578539e38995b73940bd8816ecd1c48f7e7,vfazio
31,closed,2023-02-06 13:51:54,2023-02-24 13:09:45,2023-02-24 13:09:40,2023-02-24 13:09:40,Minor updates to documentation in filter.h,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## Does this introduce a breaking change?

- [ ] Yes
- [X] No",https://github.com/tukaani-project/xz/pull/31,https://api.github.com/repos/tukaani-project/xz/issues/31,3cf72c4bcba5370f07477c9b9b62ae33069ef9a9,JiaT75
30,closed,2023-02-04 13:14:21,2023-03-16 17:42:37,2023-03-16 17:42:28,2023-03-16 17:42:28,Include Doxygen html files in release,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- The Doxygen html docs are now included in the release tarball
- If only the liblzma API function documentation is generated, the docs are created in /doc/liblzma
- If all files documentation is generated, the docs are created in /doc/html

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

## Other information
Putting the docs in liblzma folder may be unnecessary. Other distributions seems to place their html documentation files in a directory called ""html"" in the doc directory. If we just want to include it in the ""html"" directory in /doc, then the first and third commit can be omitted.",https://github.com/tukaani-project/xz/pull/30,https://api.github.com/repos/tukaani-project/xz/issues/30,509157c80c500426ec853bd992d684ebafc8500c,JiaT75
29,closed,2023-02-03 12:47:12,2023-02-14 16:59:25,2023-02-14 16:59:16,2023-02-14 16:59:16,liblzma: Improve documentation in check.h.,"All functions now explicitly specify parameter and return values. Also moved the note about SHA-256 functions not being exported to the top of the file.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## Does this introduce a breaking change?

- [ ] Yes
- [X] No",https://github.com/tukaani-project/xz/pull/29,https://api.github.com/repos/tukaani-project/xz/issues/29,43ec344c868f930e96879eb9e49212cce92a9884,JiaT75
28,closed,2023-01-31 13:45:35,2023-02-02 16:42:32,2023-02-02 16:42:28,2023-02-02 16:42:28,Test Filter String API Functions,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): New test

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/28,https://api.github.com/repos/tukaani-project/xz/issues/28,2c78a83c6faec70154d9eb78022a618ed62cdcb3,JiaT75
27,closed,2023-01-24 16:33:58,2023-02-02 16:23:03,2023-02-02 16:22:53,2023-02-02 16:22:53,Minor updates to documentation in block.h,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
Similar to https://github.com/tukaani-project/xz/pull/23. These are minor updates to these API header files and may not be everything we need to update before publishing.
<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/27,https://api.github.com/repos/tukaani-project/xz/issues/27,54ad83c1ae2180dcc0cb2445b181dc1e9732a5d6,JiaT75
26,closed,2023-01-24 13:49:53,2023-02-01 15:41:04,2023-02-01 15:05:42,,liblzma: Change use of LZMA_STR_NO_VALIDATION in lzma_str_to_filters().,"The LZMA_STR_NO_VALIDATION flag name and description is ambiguous to how it handles individual filters that cannot be used in .xz format (only lzma1 for now). Now LZMA_STR_NO_VALIDATION is a super set of the LZMA_STR_ALL_FILTERS flag, so they don't need to be used together.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/tukaani-project/xz/issues/24


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- LZMA_STR_NO_VALIDATION is now a superset of LZMA_STR_ALL_FILTERS in lzma_str_to_filters()

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
This is another option instead of https://github.com/tukaani-project/xz/pull/25. This is a behavior change for an API function, so it would have to be announced properly in the next release.",https://github.com/tukaani-project/xz/pull/26,https://api.github.com/repos/tukaani-project/xz/issues/26,cb02c4bc89c1f61651413cf0d58c15fa2c75b85f,JiaT75
25,closed,2023-01-24 13:46:06,2023-02-01 15:41:00,2023-02-01 15:39:45,2023-02-01 15:39:45,liblzma: Clarify a comment about LZMA_STR_NO_VALIDATION.,"The flag description for LZMA_STR_NO_VALIDATION was previously confusing about the treatment for filters than cannot be used with .xz format (lzma1) without using LZMA_STR_ALL_FILTERS. Now, it is clear that LZMA_STR_NO_VALIDATION is not a super set of LZMA_STR_ALL_FILTERS.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: https://github.com/tukaani-project/xz/issues/24


## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

Either this or the related code change PR should be used to fix this issue.",https://github.com/tukaani-project/xz/pull/25,https://api.github.com/repos/tukaani-project/xz/issues/25,c563a4bc554a96bd0b6aab3c139715b7ec8f6ca3,JiaT75
23,closed,2023-01-21 13:51:01,2023-02-14 12:41:11,2023-02-14 12:41:06,2023-02-14 12:41:05,Minor updates to Doxygen comments in base.h,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
Minor updates to base.h API header file. I plan to do similar changes to each API header file, but I figured its a good idea to review the first one or two so we agree on the changes needed.",https://github.com/tukaani-project/xz/pull/23,https://api.github.com/repos/tukaani-project/xz/issues/23,0c9e4fc2ad6d88d54f299240fcc5a2ce7d695d96,JiaT75
22,closed,2023-01-20 13:29:02,2023-11-10 14:11:14,2023-11-01 16:11:08,,XZ recursive CLI,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [X] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [x] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
The -r, --recursive option was commented out in the code as a placeholder.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- tuklib_list.h header file only linked list implementation was added
- All filename reading now uses tuklib_list instead of a string array
- XZ now supports -r, --recursive option to traverse directories

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/22,https://api.github.com/repos/tukaani-project/xz/issues/22,7ad5c4cd21b4c0ce3bdfc53f2c0bb782cb642006,JiaT75
21,closed,2023-01-17 14:04:30,2023-01-30 14:27:33,2023-01-27 15:58:58,,Handle SIGTSTP,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [X] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
SIGTSTP signal is not caught, so if the process is paused then the compression and decompression stats are no longer accurate.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- SIGTSTP is caught if the system supports it.
- SIGTSTP will be blocked/unblocked while the handler is in effect

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information
This can be added for 5.4.2 or 5.5.0. It adds a new string that will need to be translated and its been a ""bug"" for a long time, so 5.5.0 might be more appropriate.

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/21,https://api.github.com/repos/tukaani-project/xz/issues/21,cdaca21138147df5b73eb7659289c207a2af186e,JiaT75
17,closed,2023-01-11 14:36:37,2023-01-11 14:46:57,2023-01-11 14:46:48,2023-01-11 14:46:48,xz: Fix warning -Wformat-nonliteral on clang in message.c.,"clang and gcc differ in how they handle -Wformat-nonliteral. gcc will allow a non-literal format string as long as the function takes its format arguments as a va_list.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): Disable a clang warning


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/17,https://api.github.com/repos/tukaani-project/xz/issues/17,d1561c47ec8cd3844a785d3741dc932f9b9c5790,JiaT75
15,closed,2023-01-09 16:57:06,2023-01-11 15:58:56,2023-01-11 15:58:17,2023-01-11 15:58:17,News Draft for 5.4.1,"This is just a draft for the NEWS update for 5.4.1 stable release. If we add anything else (CMake/Windows updates, test_index tests), then I will update this PR. Let me know your thoughts!

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): NEWS update


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/15,https://api.github.com/repos/tukaani-project/xz/issues/15,62efd48a825e8f439e84c85e165d8774ddc68fd2,JiaT75
13,closed,2023-01-07 13:24:22,2023-01-21 14:10:57,2023-01-21 14:10:51,2023-01-21 14:10:51,xz: Refactor duplicated check for custom suffix when using --format=raw,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [X] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
There were duplicated checks for a custom suffix set when using --format=raw in both the encoder and decoder.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- The check is now done when parsing arguments

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/13,https://api.github.com/repos/tukaani-project/xz/issues/13,cc5aa9ab138beeecaee5a1e81197591893ee9ca0,JiaT75
12,closed,2023-01-05 14:35:55,2023-07-17 15:35:00,2023-07-17 15:34:55,2023-07-17 15:34:55,Filter to string command line interface,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [X] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
xz does not have an option to convert a single string to a full filter chain

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- New --filters command line option
- --long-help update
- man page update

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/12,https://api.github.com/repos/tukaani-project/xz/issues/12,f99e2e4e53b7ea89e4eef32ddd4882e0416357c9,JiaT75
11,closed,2023-01-04 13:01:00,2023-01-04 15:59:03,2023-01-04 15:58:58,2023-01-04 15:58:58,Tests: Replace non portable shell parameter expansion,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Tests fail on Solaris 10 because of non portable shell parameter expansion.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 
https://github.com/tukaani-project/xz/issues/10

## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Only effects test_compress based tests.
- Alters the create_compress_files.c to require the full filename as an argument instead of just ""abc"", ""text"", or ""random.

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->
I tried using ${parameter:offset} instead, but dash did not support this. Shell scripting is fun...",https://github.com/tukaani-project/xz/pull/11,https://api.github.com/repos/tukaani-project/xz/issues/11,52380678f42364daa4510f92f6d3b18ec98c3638,JiaT75
9,closed,2022-12-29 15:41:03,2023-01-09 17:23:06,2023-01-09 12:42:37,,Tests: Refactors existing filter flags tests.,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [X] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
The filter flags tests are mostly commented out and do not provide much code coverage

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Tests cover lzma_filter_flags_size, lzma_filter_flags_encode, and lzma_filter_flags_decode

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->
Once this PR and test index(#8) are merged, we can finally remove the artifacts from the old test code (expect, succeed, fail macros, etc).",https://github.com/tukaani-project/xz/pull/9,https://api.github.com/repos/tukaani-project/xz/issues/9,e54c5ad9482a8e7d5a75ed442cec9af9db7bbe94,JiaT75
8,closed,2022-12-29 14:20:32,2023-03-13 12:49:58,2023-03-13 12:49:53,2023-03-13 12:49:53,Refactor tests in test_index.c,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [X] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
The current test_index.c is using the old test format and is largely incomplete.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Creates helpful mask macros for return values from lzma_index_checks()
- Refactors test_index.c to use tuktest and cover more API functions
- Allow test_index.c to function properly if encoders or decoders are not built

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/8,https://api.github.com/repos/tukaani-project/xz/issues/8,1b7661faa4bbf4a54c6b75900b5059835c382a0f,JiaT75
7,closed,2022-12-29 13:20:58,2024-07-05 15:21:54,2023-01-06 16:10:50,2023-01-06 16:10:50,Tuktest index hash,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [ ] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): New test


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->


<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- New test added for index_hash API functions
- Increased code covered by tests

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/7,https://api.github.com/repos/tukaani-project/xz/issues/7,6fd39664de47801e670a16617863196bfbde4755,JiaT75
6,closed,2022-12-29 13:04:36,2023-01-02 14:33:53,2023-01-02 14:33:48,2023-01-02 14:33:48,Build: Only define HAVE_DECL_PROGRAM_INVOCATION_NAME if it is set to 1.,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [X] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
HAVE_DECL_PROGRAM_INVOCATION_NAME macro definition is inconsistent across build systems and is always defined, even if set to 0.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- HAVE_DECL_PROGRAM_INVOCATION_NAME -> HAVE_PROGRAM_INVOCATION_NAME
- Consistent across all build systems
- HAVE_PROGRAM_INVOCATION_NAME is only defined when set to 1

## Does this introduce a breaking change?

- [ ] Yes
- [X No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/6,https://api.github.com/repos/tukaani-project/xz/issues/6,bb740e3b117f1a3c65152d01e5755523a908ecb1,JiaT75
5,closed,2022-12-28 13:50:28,2022-12-29 12:02:18,2022-12-28 18:12:48,2022-12-28 18:12:48,Mytime tweaks,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [X] Build related changes
- [ ] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
mytime.c requires mythread.h to include <time.h> if POSIX threads are enabled. Also, HAVE_DECL_CLOCK_MONOTONIC is always set to 0 or 1

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
-  mytime.c conditionally includes either <time.h> or <sys/time.h>, depending on the configuration.
- HAVE_DECL_CLOCK_MONOTONIC is now only set if it is set to 1 in both autotools and CMake.
- mythread.h will always include <time.h>, but conditionally includes <sys/time.h> now.

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/5,https://api.github.com/repos/tukaani-project/xz/issues/5,8566d3013e5a40c397fe0e897f3512131dba80d3,JiaT75
4,closed,2022-12-20 13:57:34,2023-01-19 16:51:13,2023-01-19 16:51:13,2023-01-19 16:51:13,Doxygen,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [X] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [X] Documentation content changes
- [ ] Other (please describe): 


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Doxygen was outdated and never used

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->

- Doxygen will now only generate liblzma API functions documentation
- No longer generate LaTex documentation
- Update Doxygen from 1.4.7 to 1.8.17

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/4,https://api.github.com/repos/tukaani-project/xz/issues/4,6327a045f34d48fc5afc58ba0d32a82c94403049,JiaT75
3,closed,2022-12-16 13:30:59,2022-12-20 14:05:28,2022-12-20 14:05:21,2022-12-20 14:05:21,Doxygen: Update .gitignore for generating docs for in source build.,"In source builds are not recommended, but we should still ignore the generated artifacts.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): .gitignore updates


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
Doxygen output files were not ignored in an in source build

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- Generated Doxygen docs are ignored by git

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/3,https://api.github.com/repos/tukaani-project/xz/issues/3,30a6f5f5b8cfb94cf6227dce3b168d4d125b4fc6,JiaT75
2,closed,2022-12-16 13:11:03,2022-12-19 15:38:20,2022-12-19 15:38:12,2022-12-19 15:38:12,CMake: Update .gitignore for CMake artifacts from in source build.,"In source builds are not recommended, but we can make it easier by ignoring the generated artifacts from CMake.

## Pull request checklist

Please check if your PR fulfills the following requirements:
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): .gitignore updates


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
CMake artifacts were not properly ignored if an in source build is done.

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: 


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
- CMake build artifacts are ignored by git tracking

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/2,https://api.github.com/repos/tukaani-project/xz/issues/2,d6fed05468208ad481ba14cfaed29782632ca196,JiaT75
1,closed,2022-12-14 17:06:22,2022-12-21 13:12:16,2022-12-21 13:12:04,2022-12-21 13:12:04,Tests: Adds lzip decoder tests,"## Pull request checklist

Please check if your PR fulfills the following requirements:
- [x] Tests for the changes have been added (for bug fixes / features)
- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)
- [X] Build was run locally and without warnings or errors
- [X] All previous and new tests pass


## Pull request type

<!-- Please try to limit your pull request to one type, submit multiple
pull requests if needed. --> 

Please check the type of change your PR introduces:
- [ ] Bugfix
- [ ] Feature
- [ ] Code style update (formatting, renaming, typo fix)
- [ ] Refactoring (no functional changes, no api changes)
- [ ] Build related changes
- [ ] Documentation content changes
- [X] Other (please describe): Test for recently added feature


## What is the current behavior?
<!-- Please describe the current behavior that you are modifying. -->
This PR does not alter behavior

<!-- Related issue this PR addresses, if applicable -->
Related Issue URL: N/A


## What is the new behavior?
<!-- Please describe the behavior or changes that are being added by this
PR. -->
N/A

## Does this introduce a breaking change?

- [ ] Yes
- [X] No

<!-- If this introduces a breaking change, please describe the impact and
migration path for existing applications below. -->


## Other information

<!-- Any other information that is important to this PR. -->",https://github.com/tukaani-project/xz/pull/1,https://api.github.com/repos/tukaani-project/xz/issues/1,8a5e35d00306cf082681d55ef13e8647d6ca5f21,JiaT75
