from,to,positive,neutral,negative
mvatsyk-lsg,mvatsyk-lsg,[],"[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [x] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\n\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: N/A\n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- Total number of fuzzers increased from 1 to 12\n- 6 new fuzzers for decompressing supported archive types\n- 5 new fuzzers for compressing data into supported archive types\n- Added LZMA Raw test files based on the existing `.lzma` ones\n\n## Does this introduce a breaking change?\n\n- [x] Yes\n- [ ] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\nThis pull request will temporarily break existing oss-fuzz setup until the `oss-fuzz` repo accepts [a corresponding pull request](https://github.com/google/oss-fuzz/pull/11279) with the updated fuzzer configuration on their side.\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->\nThe improvements to the fuzzing setup were made as a part of Google ISE project.', 'score': -0.0021747369319200516, 'file_name': 'pr_73.csv'}]",[]
gabibguti,gabibguti,"[{'message': ""### Describe the Feature\n\nRestrict access in your workflow jobs to your repository. This is preventive action to keep your workflows safe. The `ci.yml` workflow jobs need just minimum permissions `contents: read`, and the default GitHub permissions are higher.\n\nThis is considered good-practice and is recommended by [GitHub](https://docs.github.com/en/actions/security-guides/automatic-token-authentication) itself and other security tools, such as [Scorecards](https://docs.github.com/en/actions/security-guides/automatic-token-authentication) and [StepSecurity](https://docs.github.com/en/actions/security-guides/automatic-token-authentication).\n\n##### Additional Context\nI'm Gabriela and I work on behalf of Google and the OpenSSF suggesting supply-chain security changes :)\n\n### Expected Complications\n\nNo.\n\n### Will I try to implement this new feature?\n\nYes"", 'score': 0.3949402319267392, 'file_name': 'issue_38.csv'}, {'message': ""I see you also have GitHub's Security Advisories feature enabled. So we could put 2 reporting options in the Security Policy, email and the [security advisory report link](https://github.com/tukaani-project/xz/security/advisories/new). Does it make sense?"", 'score': 0.21809910889714956, 'file_name': 'pr_47.csv'}]","[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [x] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\nReferencing actions by major tag (e.g. `v3`)\n\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: https://github.com/tukaani-project/xz/issues/65\nResolves https://github.com/tukaani-project/xz/issues/65\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\nReferencing actions by commit SHA (e.g. `8ade135a41bc03ea155e62e844d188df1ea18608`)\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -0.001970048062503338, 'file_name': 'pr_67.csv'}, {'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [x] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nReferencing actions by major tag (e.g. `v3`)\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: https://github.com/tukaani-project/xz/issues/65\n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\nReferencing actions by commit SHA (e.g. `8ade135a41bc03ea155e62e844d188df1ea18608`)\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -0.001970048062503338, 'file_name': 'pr_66.csv'}, {'message': 'An idea to fix `windows-ci`: I can add a trigger to run `on: pull_request` in my fork and test if the workflow is working on this PR.', 'score': 0.018976012244820595, 'file_name': 'pr_66.csv'}, {'message': 'Closing this PR to make more tests locally.', 'score': -0.03758921939879656, 'file_name': 'pr_66.csv'}, {'message': ""### Describe the Feature\n\nA Security Policy should provide clear guidance on how to report potential vulnerabilities and inform the vulnerabilities disclosure window for this repo. It recommended by [Github](https://docs.github.com/en/code-security/getting-started/securing-your-repository#setting-a-security-policy) and [Scorecard](https://github.com/ossf/scorecard).\n\n\n### Expected Complications\n\nNo.\n\n### Will I try to implement this new feature?\n\nYes\n\n#### Additional context\nI'm Gabriela and I work on behalf of Google and the OpenSSF suggesting supply-chain security changes :)\n\nIf you agree, I can open a PR to suggest a Security Policy, and we can work together to communicate how the repo can best handle vulnerability reports."", 'score': 0.0032255323603749275, 'file_name': 'issue_46.csv'}, {'message': ""## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [x] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [x] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nNot having a Security Policy file.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: Resolves https://github.com/tukaani-project/xz/issues/46\n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n- Add Security Policy file\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->\nI've tried to keep the timelines of confirming a vulnerability report and fixing a vulnerability as open as possible. Let me know what you think and if this seems reasonable for maintainence."", 'score': -0.002069145441055298, 'file_name': 'pr_47.csv'}]","[{'message': '## Other information\n`windows-ci` is failing in my fork. I tested it on the [last commit it was working](https://github.com/tukaani-project/xz/commit/bf65f25ac8fa8b6686459c004759d8b77ba17502) without changes and it failed too, maybe it needs some data only the original repository has?', 'score': -0.848279703175649, 'file_name': 'pr_66.csv'}, {'message': 'I think the failure is not related to the PR changes, can you confirm by running the workflow on the repository?', 'score': -0.470539472065866, 'file_name': 'pr_66.csv'}]"
hansjans162,hansjans162,"[{'message': 'The ifunc attribute is a cleaner and marginally more performant\nmechanism for dynamically choosing a routine at runtime.\n\nThe PR contains two parts:\n1. The first replaces the crc64 construct with the ifunc resolver.\n2. The second modifies the build process to account for the ifunc attribute.\n\nHAVE_FUNC_ATTRIBUTE_IFUNC is set if ifuncs can be built\non the system. glibc has supported ifunc since version 2.11 (2009). Building for older machines\nmay want to manually disable ifunc support when building.\n--disable-ifunc can be used with autotools and\nUSE_ATTR_IFUNC=OFF can be used with CMake to disable the check for ifunc support.\nUSE_ATTR_IFUNC defaults to ON for CMake and enable_ifunc defaults to yes for autotools.\n\nMore about ifuncs can be read [here](https://sourceware.org/glibc/wiki/GNU_IFUNC) or [here](https://www.agner.org/optimize/optimizing_cpp.pdf#page=142).\n\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [X] Refactoring (no functional changes, no api changes)\n- [X] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\ncrc64\\_fast currently uses the \\_\\_attribute\\_\\_ constructor to choose the crc implementation to use.\n\n\n## What is the new behavior?\nI replaced the \\_\\_attribute\\_\\_((\\_\\_constructor\\_\\_)) with \\_\\_attribute\\_\\_((ifunc())) in crc64_fast.c\n\n- The HAVE_FUNC_ATTRIBUTE_IFUNC flag was added to configure.ac\n- The USE_ATTR_IFUNC cmake option was added to CMakeLists.txt\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\nFunctionality should be identical.\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': 0.24452095245942473, 'file_name': 'pr_53.csv'}]","[{'message': ""Added an implementation for crc32 that makes use of clmul.\nCode for this implementation was written by Ilya Kurdyukov and can be found here.\nhttps://github.com/ilyakurdyukov/crc-clmul-sim\n\nAlso refactored crc64_clmul to use the new macros created for crc32_clmul.\nAs well as moved similar functions to crc_clmul_common to eliminate duplicate code.\n\nI tested this on files doubling in size starting from 1 byte up to 1 Gigabyte.\nDuring testing I found that crc32_clmul can run up to 70% faster than crc32_generic,\nand has an average speed increase of 58.4% for sizes greater than 16 bytes.\n\nI also used this to test the reworked version of crc64_clmul.\nThis version of crc64_clmul is an average of 3.9% faster than the original implementation.\nThis speed increase is due to some inline assembly as well as changing around the order of some if statements. \n\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [X] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [X] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\ncrc32\\_fast currently only uses a generic implementation.\n\n\n## What is the new behavior?\nI added an implementation for crc32 that makes use of clmul in crc32_fast.c \nAlso refactored crc64_clmul implementation to use the same macros as crc32_clmul\n\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n\n## Other information\n\nHere is the output from both tests that gave me the statistics above.\n\nthe number of unique files tested on and the number of times the crc is run\ndecrease as the bytes get larger so the benchmark does not take too long.\n\nThe 64 and 32 spd+ show the percentage speed increase over the generic.\nThe percentage on the graph show the combined average for all types.\nFor example (50% is twice as fast, 200% is twice as slow)\n```\n64 generic: #\t\t64 clmul: +\n32 generic: =\t\t32 clmul: *\n\n#bytes, #files,   #crc's,  64spd+,  32spd+: 0%          50%          100%        150%         200%\n    16,  30000, 20648881,  39.96%,  24.24%: |           |      +*    | =    #    |            |\n    32,  30000, 12782640,  55.79%,  36.26%: |           |   +*       |  =        #            |\n    64,  30000,  7255012,  72.19%,  50.27%: |           +*           | =         |       #    |\n   128,  30000,  3890368,  82.53%,  69.13%: |       +*  |            |    =      |            |#\n   256,  30000,  2018311,  82.19%,  68.21%: |        +  |            |   =       |            |#\n   512,  30000,  1028488,  79.37%,  63.75%: |         + |            |  =        |            #\n    1K,  30000,   519217,  78.11%,  62.22%: |         + |            |   =       |           #|\n    2K,  30000,   260870,  76.74%,  61.71%: |          +|            |  =        |          # |\n    4K,  30000,   130752,  76.78%,  60.15%: |          +|            |  =        |          # |\n    8K,  30000,    65456,  76.24%,  60.59%: |          +|            |  =        |          # |\n   16K,  30000,    32748,  76.66%,  60.03%: |          +|            |  =        |          # |\n   32K,  30000,    16379,  76.78%,  60.04%: |          +|            |  =        |          # |\n   64K,  16384,     8190,  76.62%,  59.76%: |          +|            |  =        |          # |\n  128K,   8192,     4095,  76.52%,  59.71%: |          +|            |  =        |          # |\n  256K,   4096,     2047,  76.32%,  59.78%: |          +|            |  =        |          # |\n  512K,   2048,     1023,  84.70%,  60.09%: |        +  |         =  |           |            |       #\n    1M,   1024,      511,  76.71%,  60.29%: |          +|            |  =        |          # |\n    2M,    512,      255,  76.47%,  59.96%: |          +|            |  =        |          # |\n    4M,    256,      127,  76.42%,  60.03%: |          +|            |  =        |          # |\n    8M,    128,       63,  76.33%,  60.22%: |          +|            |  =        |          # |\n   16M,     64,       31,  76.55%,  60.23%: |          +|            |  =        |          # |\n   32M,     32,       15,  76.14%,  60.66%: |          +|            |  =        |          # |\n   64M,     16,       10,  76.53%,  59.99%: |          +|            |  =        |          # |\n  128M,      8,       10,  76.27%,  60.28%: |          +|            |  =        |          # |\n  256M,      4,       10,  76.42%,  59.96%: |          +|            |  =        |          # |\n  512M,      2,       10,  76.45%,  60.23%: |          +|            |  =        |          # |\n    1G,      1,       10,  76.64%,  60.19%: |          +|            |  =        |          # |\ntotal average:             75.13%,  58.44%\n\n```\n\n\nThe 64old and 64new spd+ show the percentage speed increase over the generic.\nThe percentage on the graph show the combined average for all types.\n```\n64 generic: #     64 clmul old: +     64 clmul new: *\n\n#bytes, #files,   #crc's, old64spd+, new64spd+: 0%          50%          100%        150%         200%\n     1,  30000, 48806446,  -97.328%,  -88.708%, |           | #          | * +       |            |\n     2,  30000, 44739242,  -57.943%,  -48.621%, |           |     #      |* +        |            |\n     4,  30000, 38347922,   -9.964%,   -4.811%, |           |          #*|+          |            |\n     8,  30000, 29826161,   -0.558%,    3.477%, |           |           *+           |            |\n    16,  30000, 20648881,   39.017%,   41.582%, |           |        +   |         # |            |\n    32,  30000, 12782640,   54.057%,   54.848%, |           |      +     |           |    #       |\n    64,  30000,  7255012,   69.551%,   70.777%, |           |  *+        |           |            | #\n   128,  30000,  3890368,   81.047%,   81.603%, |          *+            |           |            |            #\n   256,  30000,  2018311,   81.129%,   81.619%, |          +|            |           |            |           #\n   512,  30000,  1028488,   77.798%,   79.257%, |           *+           |           |            |         #\n    1K,  30000,   519217,   75.448%,   77.138%, |           |*+          |           |            |       #\n    2K,  30000,   260870,   73.763%,   75.518%, |           |*+          |           |            |     #\n    4K,  30000,   130752,   73.392%,   75.773%, |           |* +         |           |            |     #\n    8K,  30000,    65456,   74.341%,   76.026%, |           |*+          |           |            |      #\n   16K,  30000,    32748,   68.951%,   70.712%, |           |  *+        |           |            | #\n   32K,  30000,    16379,   73.761%,   76.129%, |           |*+          |           |            |      #\n   64K,  16384,     8190,   74.789%,   76.561%, |           |*+          |           |            |      #\n  128K,   8192,     4095,   74.834%,   75.900%, |           |*+          |           |            |      #\n  256K,   4096,     2047,   74.508%,   76.488%, |           |*+          |           |            |      #\n  512K,   2048,     1023,   74.781%,   75.998%, |           |*+          |           |            |      #\n    1M,   1024,      511,   74.523%,   76.610%, |           |*+          |           |            |      #\n    2M,    512,      255,   74.871%,   76.690%, |           |*+          |           |            |      #\n    4M,    256,      127,   74.656%,   76.658%, |           |*+          |           |            |      #\n    8M,    128,       63,   74.151%,   76.085%, |           |*+          |           |            |      #\n   16M,     64,       31,   74.802%,   76.263%, |           |*+          |           |            |      #\n   32M,     32,       15,   74.671%,   76.244%, |           |*+          |           |            |      #\n   64M,     16,       10,   74.626%,   76.459%, |           |*+          |           |            |      #\n  128M,      8,       10,   74.738%,   76.497%, |           |*+          |           |            |      #\n  256M,      4,       10,   74.395%,   76.110%, |           |*+          |           |            |      #\n  512M,      2,       10,   74.904%,   76.549%, |           |*+          |           |            |      #\n    1G,      1,       10,   74.709%,   76.477%, |           |*+          |           |            |      #\ntotal average:              57.949%,   60.255%, \nspeed increase new vs old:  3.979%\n```"", 'score': 0.07758342800661922, 'file_name': 'pr_64.csv'}]",[]
DimitriPapadopoulos,DimitriPapadopoulos,[],"[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [x] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n\nTypos.\n\n## What is the new behavior?\n\nFixed typos.\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -0.0007855743169784546, 'file_name': 'pr_58.csv'}]",[]
Jamaika1,Jamaika1,[],"[{'message': ""```\nmythread.h:381:48: error: 'once' undeclared (first use in this function); did you mean 'once_'?\n  381 |                         if (!InitOnceComplete(&once, 0, NULL)) \\\n      |                                                ^~~~\ncrc64_small.c:47:9: note: in expansion of macro 'mythread_once'\n   47 |         mythread_once(crc64_init);\n      |         ^~~~~~~~~~~~~\n```\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\n\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n-\n-\n-\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [ ] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->"", 'score': -0.004106887616217136, 'file_name': 'pr_59.csv'}]",[]
parheliamm,parheliamm,[],"[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [x] Build related changes\n- [ ] Documentation content changes\n- [x] Other (please describe): \n\n\n## What is the current behavior?\n\n<!-- Please describe the current behavior that you are modifying. -->\n\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- Change LZMA_MEMCMPLEN_EXTRA to 8 on ARM64\n- select enable-unsafe-type-punning if enable_unaligned_access enabled\n  -\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [ ] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->\n\nPerformance improvements on ARM64 with 2 commits:\n\n    vanilla:\n    Compressor name         Compress. Decompress. Compr. size  Ratio Filename\n    memcpy                   5102 MB/s  5183 MB/s   211957760 100.00 silesia.tar\n    xz 5.2.5 -0              15.9 MB/s  51.6 MB/s    62579868  29.52 silesia.tar\n    xz 5.2.5 -1              11.8 MB/s  57.5 MB/s    58408297  27.56 silesia.tar\n    xz 5.2.5 -2              7.53 MB/s  59.9 MB/s    56708167  26.75 silesia.tar\n    xz 5.2.5 -3              5.02 MB/s  61.6 MB/s    55745576  26.30 silesia.tar\n    xz 5.2.5 -4              3.15 MB/s  62.7 MB/s    52106950  24.58 silesia.tar\n    xz 5.2.5 -5              2.29 MB/s  65.1 MB/s    49960648  23.57 silesia.tar\n    xz 5.2.5 -6              1.94 MB/s  65.5 MB/s    49196155  23.21 silesia.tar\n    xz 5.2.5 -7              1.83 MB/s  65.7 MB/s    48926731  23.08 silesia.tar\n    xz 5.2.5 -8              1.87 MB/s  66.4 MB/s    48768992  23.01 silesia.tar\n    xz 5.2.5 -9              1.85 MB/s  66.5 MB/s    48747544  23.00 silesia.tar\n\n\n\nPatched:\n\n```\nCompressor name         Compress. Decompress. Compr. size  Ratio Filename\nmemcpy                   5209 MB/s  5265 MB/s   211957760 100.00 silesia.tar\nxz 5.2.5 -0              16.4 MB/s  51.9 MB/s    62579868  29.52 silesia.tar\nxz 5.2.5 -1              12.0 MB/s  57.8 MB/s    58408297  27.56 silesia.tar\nxz 5.2.5 -2              8.26 MB/s  60.2 MB/s    56708167  26.75 silesia.tar\nxz 5.2.5 -3              5.14 MB/s  61.6 MB/s    55745576  26.30 silesia.tar\nxz 5.2.5 -4              3.29 MB/s  62.7 MB/s    52106950  24.58 silesia.tar\nxz 5.2.5 -5              2.42 MB/s  64.9 MB/s    49960648  23.57 silesia.tar\nxz 5.2.5 -6              2.03 MB/s  65.6 MB/s    49196155  23.21 silesia.tar\nxz 5.2.5 -7              1.93 MB/s  65.6 MB/s    48926731  23.08 silesia.tar\nxz 5.2.5 -8              1.94 MB/s  66.3 MB/s    48768992  23.01 silesia.tar\nxz 5.2.5 -9              1.91 MB/s  66.4 MB/s    48747544  23.00 silesia.tar\ndone... (cIters=1 dIters=1 cTime=1.0 dTime=2.0 chunkSize=1706MB cSpeed=0MB)\n```\n', 'score': -0.0022812671959400177, 'file_name': 'pr_75.csv'}]",[]
kianmeng,kianmeng,[],"[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [x] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nTypos fixes of `codespell`.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n- Found new typos via `typos --hidden --format brief`\n-\n-\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -0.001970048062503338, 'file_name': 'pr_74.csv'}]",[]
kiyolee,kiyolee,[],"[{'message': 'To support files larger than 4 GiB on Windows, all calls of stat() and lseek() have to be redirected to 64-bit filesize capable calls.\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\nNote: Compile warnings are inevitable for MSVC when some variables can be either 64-bit (target x64) or 32-bit (target Win32) at compile time. Those warnings need extensive changes to clean up.\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [X] Other (please describe): \n\nMake xz buildable with MSVC.\nAdd 64-bit filesize support on Windows.\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\n\nxz does not build with MSVC.\nxz would refuse to handle files larger than 4 GiB.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\nxz can be built with MSVC.\nxz can handle files larger than 4 GiB on Windows.\n\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->\n\nI have added extensive MSVC build support in my own repo https://github.com/kiyolee/xz-win-build.\nIn addition to building xz, I have added support to build all tests as well.\nThis PR only covers code changes that were done while setting up my own repo.', 'score': 0.002956382930278778, 'file_name': 'pr_60.csv'}, {'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [X] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\n\ncmake build with MSVC failed as ""getopt.in.h"" included <unistd.h> which does not exist for MSVC.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\ncmake build with MSVC succeeded.\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -0.0023099230602383614, 'file_name': 'pr_63.csv'}, {'message': 'Would you consider renaming ""getopt.in.h"" to ""getopt.h""?\nThere is nothing in ""getopt.in.h"" that needs to be generated.\nThe generated ""getopt.h"" by cmake build is exactly the same as ""getopt.in.h"".', 'score': -0.012956110760569572, 'file_name': 'pr_63.csv'}]",[]
JiaT75,JiaT75,"[{'message': 'Created two PRs for this, but only one should be used. The better choice is probably https://github.com/tukaani-project/xz/pull/25, but I wanted to show both solutions to see which one we like better.', 'score': 0.27853409433737397, 'file_name': 'issue_24.csv'}]","[{'message': '### Describe the bug\n\nIf --format is set to anything other than raw, xz will only print the list information, or an error (--list works only on .xz files (--format=xz or --format=auto)). When --format=raw, xz will print:\nFilter chain: --lzma2=dict=8MiB,lc=3,lp=0,pb=2,mode=normal,nice=64,mf=bt4,depth=0 [or the actual filter chain specified]\n9 MiB of memory is required. The limiter is disabled.\n--list works only on .xz files (--format=xz or --format=auto)\n\nThis is not a critical bug, but it is a small inconsistency.\n\n### Version\n\nmaster @ 8d372bd94066b1a5b05\n\n### Operating System\n\nUbuntu\n\n### Relevant log output\n\n```shell\n./src/xz/xz --format=raw --suffix=.xz --lzma2 -lvv  config.h.xz\nxz: Filter chain: --lzma2=dict=8MiB,lc=3,lp=0,pb=2,mode=normal,nice=64,mf=bt4,depth=0\nxz: 9 MiB of memory is required. The limiter is disabled.\nxz: --list works only on .xz files (--format=xz or --format=auto)\n\n-----------------------------------------------\n\n./src/xz/xz --format=lzma --suffix=.xz --lzma2 -lvv  config.h.xz\nxz: --list works only on .xz files (--format=xz or --format=auto)\n\n-----------------------------------------------\n\n./src/xz/xz --format=xz --suffix=.xz --lzma2 -lvv  config.h.xz\nconfig.h.xz (1/1)\n  Streams:            1\n  Blocks:             1\n  Compressed size:    4,044 B\n  Uncompressed size:  16.5 KiB (16,852 B)\n  Ratio:              0.240\n  Check:              CRC64\n  Stream padding:     0 B\n  Streams:\n    Stream    Blocks      CompOffset    UncompOffset        CompSize      UncompSize  Ratio  Check      Padding\n         1         1               0               0           4,044          16,852  0.240  CRC64            0\n  Blocks:\n    Stream     Block      CompOffset    UncompOffset       TotalSize      UncompSize  Ratio  Check      CheckVal          Header  Flags        CompSize    MemUsage  Filters\n         1         1              12               0           4,008          16,852  0.238  CRC64      b4fdba2a9a1834bb      12  --              3,987       9 MiB  --lzma2=dict=8MiB\n  Memory needed:      9 MiB\n  Sizes in headers:   No\n  Minimum XZ Utils version: 5.0.0\n```', 'score': -0.1253878315910697, 'file_name': 'issue_14.csv'}, {'message': 'Solved by commit to master 123255b6ed15f4428b2aa92e4962015a5362f6bf', 'score': 0.1168915182352066, 'file_name': 'issue_14.csv'}, {'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [X] Build related changes\n- [X] Documentation content changes\n- [ ] Other (please describe): \n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n- The Doxygen html docs are now included in the release tarball\n- If only the liblzma API function documentation is generated, the docs are created in /doc/liblzma\n- If all files documentation is generated, the docs are created in /doc/html\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n## Other information\nPutting the docs in liblzma folder may be unnecessary. Other distributions seems to place their html documentation files in a directory called ""html"" in the doc directory. If we just want to include it in the ""html"" directory in /doc, then the first and third commit can be omitted.', 'score': -0.0023099230602383614, 'file_name': 'pr_30.csv'}, {'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [X] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [x] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nThe -r, --recursive option was commented out in the code as a placeholder.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n- tuklib_list.h header file only linked list implementation was added\n- All filename reading now uses tuklib_list instead of a string array\n- XZ now supports -r, --recursive option to traverse directories\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': -2.527330070734024e-05, 'file_name': 'pr_22.csv'}, {'message': '### Describe the Feature\n\nBoth MinGw and CMake Windows builds should be tested.\n\n### Expected Complications\n\nDownloading the correct build environment dependencies could be tricky. GitHub might have some reusable components to help with this.\n\n### Will I try to implement this new feature?\n\nYes', 'score': -0.022352013736963272, 'file_name': 'issue_18.csv'}]","[{'message': ""Turns out the error is with clang and -Wformat-nonliteral. clang treats this warning differently than gcc, which allows using a non-literal format string if the function takes its format arguments as a va_list. \n\nUnfortunately, MacOS seems to ship with gcc that really just runs clang. So this makes it harder to detect when MacOS is actually using clang.\n\nA few solutions: \n- Reduce -Wformat=2 to -Wformat=1\n- Add -Wno-format-literal\n- Add a check for CC=clang and for MacOS to set -Wno-format-literal. We can't just check CC for clang since with MacOS you can't be sure. We also can't just check $GCC=yes, since even if CC is overridden to use clang this will still be set."", 'score': -0.7271828642114997, 'file_name': 'issue_16.csv'}, {'message': 'This includes the doxygen .html files in the release, but does not install them. I will need to rework this to actually install the files, which seems more useful than just including them.', 'score': -0.470576087012887, 'file_name': 'pr_30.csv'}, {'message': ""Now I have the HTML files being installed. They are currently installed to `$(docdir)/liblzma`, for liblzma headers only, or `$(docdir)/html` for full documentation. So, by default, it will install to `/share/doc/xz/liblzma`, which I am not sure if I like.\n\nI don't know of a good clean way to install to `/share/doc/liblzma` (or  `/share/doc/liblzma/html` if that makes more sense) since `$(docdir)` is `/share/doc/xz`. We can always install to `$(docdir)/../liblzma`, but that is hacky. If there is a good clean way to do this, I might be interested to try it.\n\nIf we don't like how it is now, the easiest alternative is to always install to `/share/doc/xz/html` and not care about the distinction between liblzma header only documentation and all source files documentation. "", 'score': -0.4261409845203161, 'file_name': 'pr_30.csv'}, {'message': '### Describe the bug\n\nNot necessarily a bug, but the behavior is confusing. lzma_str_to_filters() is successful with the filter string ""lzma1"" when LZMA_STR_ALL_FILTERS flag is used, as expected. However, lzma_str_to_filters() fails with ""lzma1"" when LZMA_STR_NO_VALIDATION. This is confusing because the ""validation"" is too vague. Checking if a filter can be used with the .xz format is technically validation. So, either the code should change or the documentation should be updated to clarify this.\n\n### Version\n\n5.4.1\n\n### Operating System\n\nUbuntu\n\n### Relevant log output\n\n_No response_', 'score': -0.9271228136494756, 'file_name': 'issue_24.csv'}]"
Ricky-Tigg,Ricky-Tigg,[],"[{'message': ""### Describe the Feature\n\nHello. The program acquired from this repository and installed works as intended. Nonetheless I'd rather keep the benefit of having a release installed as packaged by the Linux distribution I am using in order to obtain its automatic updates. However, the uninstallation is uncovered in the`INSTALL.generic` file. This could be rectified by an addition either of a methodology into this file or script dedicated for that purpose.\n\n### Expected Complications\n\n_No response_\n\n### Will I try to implement this new feature?\n\nYes"", 'score': -0.1324781086295843, 'file_name': 'issue_72.csv'}, {'message': '### Describe the bug\n\n_Reference:_ _INSTALL.generic_ | `./configure` is present as a configuration instruction.\n\nHello, In Bash Shell:\n```\n$ ./configure\nbash: ./configure: No such file or directory\n$ ls | grep -i configure\nconfigure.ac\n```\n\n### Version\n\n5.4.5; as source code (tar.gz)\n\n### Operating System\n\nFedora; edition 39\n\n### Relevant log output\n\n_No response_', 'score': -0.04139264486730099, 'file_name': 'issue_71.csv'}]",[]
mgood7123,mgood7123,[],"[{'message': 'how stable is cmake support in xz ?\n\nas i plan to build for windows via cmake and add xz as a library in my project', 'score': 0.17353846156038344, 'file_name': 'issue_68.csv'}]","[{'message': '### Describe the bug\n\n```\nlocalhost:~/llvm_18$ release_BUILD/LIBXZ/OUT/bin/lzma\nError relocating release_BUILD/LIBXZ/BUILD/lzma: unsupported relocation type 37\nError relocating release_BUILD/LIBXZ/BUILD/lzma: unsupported relocation type 37\n```\n\n```cmake\nif (NOT EXISTS ${CMAKE_BINARY_DIR}/LIBXZ)\n  execute_process(\n    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/xz ${CMAKE_BINARY_DIR}/LIBXZ\n  )\nendif()\n\nif (NOT EXISTS ${CMAKE_BINARY_DIR}/LIBXZ/OUT/lib/liblzma.a)\n  execute_process(\n    COMMAND\n      ${CMAKE_COMMAND}\n      -D CMAKE_BUILD_TYPE=Release\n      -D ""CMAKE_C_FLAGS=${CMAKE_C_FLAGS}""\n      -D ""CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}""\n      -D CMAKE_C_COMPILER=${CMAKE_C_COMPILER}\n      -D CMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}\n      -D CMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/LIBXZ/OUT\n      -D BUILD_SHARED_LIBS=OFF\n      -B ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\n    COMMAND_ECHO STDOUT\n  )\n  execute_process(\n    COMMAND\n      ${CMAKE_COMMAND}\n      --build ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\n    COMMAND_ECHO STDOUT\n  )\n  execute_process(\n    COMMAND\n      ${CMAKE_COMMAND}\n      --install ${CMAKE_BINARY_DIR}/LIBXZ/BUILD\n    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/LIBXZ\n    COMMAND_ECHO STDOUT\n  )\nendif()\n```\n\n### Version\n\n5.5.0 git master https://github.com/tukaani-project/xz/commit/837ea40b1c9d4998cac4500b55171bf33e0c31a6\n\n### Operating System\n\nalpine linux\n\n### Relevant log output\n\n_No response_', 'score': -0.37372064450755715, 'file_name': 'issue_70.csv'}, {'message': 'so this is caused by musl not supporting `_ifunc_` attribute and current alpine linux clang compilers (clang 14, 15, 16, and 17 to 17.0.3) not emitting a warning if `ifunc` is used for a musl target, (unlike gcc which does emit a warning)\n\nfixable via `-D ALLOW_ATTR_IFUNC=OFF`', 'score': -0.7689186600036919, 'file_name': 'issue_70.csv'}]"
XVilka,XVilka,[],"[{'message': ""### Describe the bug\n\nWe compile xz as a Meson subproject. We have AppVeyor VS2019 as CI job, they recently updated their toolchain to LLVM/Clang 16.0.1, we use `clang-cl` to compile everything. After the upgrade, it started producing this error:\n```\n..\\subprojects\\xz-5.4.1\\src\\common\\tuklib_integer.h(647,2): error: call to undeclared library function '_BitScanReverse' with type 'unsigned char (unsigned long *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]\n        _BitScanReverse(&i, n);\n        ^\n..\\subprojects\\xz-5.4.1\\src\\common\\tuklib_integer.h(647,2): note: include the header <intrin.h> or explicitly provide a declaration for '_BitScanReverse'\n..\\subprojects\\xz-5.4.1\\src\\common\\tuklib_integer.h(749,2): error: call to undeclared library function '_BitScanForward' with type 'unsigned char (unsigned long *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]\n        _BitScanForward(&i, n);\n        ^\n```\nSee full log here:\nhttps://ci.appveyor.com/project/rizinorg/rizin/builds/46815593/job/ny9b339jydox5pft#L5611\n\nThis is the wrap file we use: https://github.com/rizinorg/rizin/blob/dev/subprojects/liblzma.wrap\nThese are Meson build files: https://github.com/rizinorg/rizin/tree/dev/subprojects/packagefiles/xz-5.4.1\n\n### Version\n\n5.4.1\n\n### Operating System\n\nWindows Server 2019 (AppVeyor VS2019 image)\n\n### Relevant log output\n\n_No response_"", 'score': -0.1844299752265215, 'file_name': 'issue_48.csv'}]",[]
TheStoryEnd,TheStoryEnd,[],[],"[{'message': 'https://nvd.nist.gov/vuln/detail/CVE-2020-22916\n\nThis link seems to be inaccessible：https://github.com/snappyJack/CVE-request-XZ-5.2.5-has-denial-of-service-vulnerability\n\nIs there a fix for CVE xz?\n[1] If not, what is the repair plan for xz?\n[2] If yes, can you indicate which submissions fix CVE-2020-22916?\n\n', 'score': -0.7740596970543265, 'file_name': 'issue_61.csv'}]"
asarubbo,asarubbo,[],[],"[{'message': ""### Describe the bug\n\nOur [Gentoo Tinderbox](https://blogs.gentoo.org/ago/2020/07/04/gentoo-tinderbox/) reported a test failure at [bug 914170](https://bugs.gentoo.org/914170)\n\nBy looking at test-suite.log I can see:\n\n```\n==1161==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5614ecd418a0 at pc 0x7f8d20216905 bp 0x7ffd6a482040 sp 0x7ffd6a482038\nREAD of size 16 at 0x5614ecd418a0 thread T0\n    #0 0x7f8d20216904 in crc64_clmul /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40\n    #1 0x5614ecd2a53c in test_lzma_crc64 /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:106:2\n    #2 0x5614ecd2a237 in tuktest_run_test /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/tuktest.h:596:4\n    #3 0x5614ecd29cec in main /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:383:2\n    #4 0x7f8d1fe23c89  (/lib64/libc.so.6+0x23c89)\n    #5 0x7f8d1fe23d44 in __libc_start_main (/lib64/libc.so.6+0x23d44)\n    #6 0x5614ecc553f0 in _start (/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4-abi_x86_64.amd64/tests/.libs/test_check+0x203f0)\n\n0x5614ecd418a0 is located 32 bytes before global variable '.str.42' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:78' (0x5614ecd418c0) of size 51\n  '.str.42' is ascii string 'assert_uint: '%s == %lu' but expected '... %s %lu''\n0x5614ecd418a9 is located 0 bytes after global variable 'test_string' defined in '/var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/tests/test_check.c:22' (0x5614ecd418a0) of size 9\nSUMMARY: AddressSanitizer: global-buffer-overflow /var/tmp/portage/app-arch/xz-utils-5.4.4/work/xz-5.4.4/src/liblzma/check/crc64_fast.c:284:40 in crc64_clmul\nShadow bytes around the buggy address:\n  0x5614ecd41600: 07 f9 f9 f9 f9 f9 f9 f9 00 00 00 05 f9 f9 f9 f9\n  0x5614ecd41680: 00 00 00 03 f9 f9 f9 f9 00 00 00 00 00 00 00 04\n  0x5614ecd41700: f9 f9 f9 f9 06 f9 f9 f9 06 f9 f9 f9 07 f9 f9 f9\n  0x5614ecd41780: 00 07 f9 f9 00 04 f9 f9 00 02 f9 f9 00 00 00 00\n  0x5614ecd41800: 00 06 f9 f9 f9 f9 f9 f9 00 00 00 00 00 02 f9 f9\n=>0x5614ecd41880: f9 f9 f9 f9[00]01 f9 f9 00 00 00 00 00 00 03 f9\n  0x5614ecd41900: f9 f9 f9 f9 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9\n  0x5614ecd41980: 03 f9 f9 f9 00 04 f9 f9 00 00 00 00 00 00 07 f9\n  0x5614ecd41a00: f9 f9 f9 f9 04 f9 f9 f9 00 00 00 02 f9 f9 f9 f9\n  0x5614ecd41a80: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00\n  0x5614ecd41b00: 00 00 07 f9 f9 f9 f9 f9 00 00 00 03 f9 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==1161==ABORTING\n```\n\nI didn't look deeply into this issue so I don't know if the bug is in the unittest itself or in the involed libraries/daemons, if so please check for any security implications. I'm not doing a private report since it is already public on gentoo bugzilla.\nIf I can do further, please let me know.\n\n### Version\n\n5.4.4\n\n### Operating System\n\nGentoo\n\n### Relevant log output\n\n_No response_"", 'score': -0.2796306284144521, 'file_name': 'issue_62.csv'}]"
eworm-de,eworm-de,[],[],"[{'message': ""### Describe the bug\n\nBuilding the multilib package for Arch Linux (https://archlinux.org/packages/multilib/x86_64/lib32-xz/) fails. The lines producing the error did not change recently, but the version before (5.4.1) built without problems (and still builds with current toolchain).\n\n### Version\n\nlatest\n\n### Operating System\n\nArch Linux\n\n### Relevant log output\n\n```shell\nIn file included from lz/lz_encoder_mf.c:16:\n../../src/liblzma/common/memcmplen.h: In function 'lzma_memcmplen':\n../../src/liblzma/common/memcmplen.h:92:36: error: conversion to 'uint32_t' {aka 'const unsigned int'} from 'int' may change the sign of the result [-Werror=sign-conversion]\n   92 |                 const uint32_t x = 0xFFFF ^ _mm_movemask_epi8(_mm_cmpeq_epi8(\n      |                                    ^~~~~~\n```"", 'score': -0.632780714891851, 'file_name': 'issue_44.csv'}]"
ssvb,ssvb,"[{'message': ""### Describe the Feature\n\nSimilar to BCJ filters for executables, UTF-8 text compression can be also potentially improved by applying a filter before compressing data with LZMA. Each Cyrillic letter needs 2 bytes in UTF-8 format. And it's easy to demonstrate that converting UTF-8 to legacy 8-bit encoding improves compression. Some examples are below.\n\nUkrainian text is **~7%** better compressible in a 8-bit cp1124 encoding:\n```\nwget https://archive.org/stream/ukrainskakuhnya1998/ukrainskakuhnya1998_djvu.txt\niconv -f utf-8 -t CP1124//TRANSLIT ukrainskakuhnya1998_djvu.txt > ukrainskakuhnya1998_djvu.txt.cp1124\nxz -k ukrainskakuhnya1998_djvu.txt\nxz -k ukrainskakuhnya1998_djvu.txt.cp1124\nls -l ukrainskakuhnya1998_djvu*\n-rw-r--r-- 1 ssvb ssvb 2860770 May 15 19:44 ukrainskakuhnya1998_djvu.txt\n-rw-r--r-- 1 ssvb ssvb 1682011 May 15 19:47 ukrainskakuhnya1998_djvu.txt.cp1124\n-rw-r--r-- 1 ssvb ssvb  418940 May 15 19:47 ukrainskakuhnya1998_djvu.txt.cp1124.xz\n-rw-r--r-- 1 ssvb ssvb  448944 May 15 19:44 ukrainskakuhnya1998_djvu.txt.xz\n```\n\nFinnish text is **~0.8%** better compressible in a 8-bit latin1 encoding:\n```\nwget https://www.gutenberg.org/cache/epub/70694/pg70694.html\niconv -f utf-8 -t latin1//TRANSLIT pg70694.html > pg70694.html.latin1\nxz -k pg70694.html\nxz -k pg70694.html.latin1\nls -l pg70694*\n-rw-r--r-- 1 ssvb ssvb 742324 May  4 03:00 pg70694.html\n-rw-r--r-- 1 ssvb ssvb 709415 May 15 19:16 pg70694.html.latin1\n-rw-r--r-- 1 ssvb ssvb 223924 May 15 19:16 pg70694.html.latin1.xz\n-rw-r--r-- 1 ssvb ssvb 225720 May  4 03:00 pg70694.html.xz\n```\n\nNow regarding the filter itself. It needs to be perfectly reversible without any possible data loss during conversion. So I would suggest to use a small set of legacy 8-bit codepages, such as latin1, cp1124, cp1251 and so on. But still reserve one special character for escape sequences (to switch between the available 8-bit codepages or for injecting arbitrary binary data). I can implement a prototype of such filter if anyone is interested. But the main question is how to integrate it into XZ? And whether such filter would be accepted in principle?\n\n### Expected Complications\n\nThat's a format extension. So older releases of `xz-utils` won't be able to decompress newly created `xz` files with this new filter.\n\n### Will I try to implement this new feature?\n\nYes"", 'score': 0.7976266301702708, 'file_name': 'issue_50.csv'}]",[],[]
vfazio,vfazio,[],"[{'message': 'rebased and pushed a whitespace change.', 'score': -0.00293032918125391, 'file_name': 'pr_32.csv'}]","[{'message': ""On Microblaze builds will fail when trying to add symver information because  `__attribute__((symver ..))` is not supported even though `__has_attribute(__symver__)` returns true.\n\nSupport for symver needs to be detected via a compile test since `__has_attribute` can report false positives [0].\n\nAdd a configure compile check for `__attribute__((symver ..))` to ensure it is supported and define a variable to advertise support.\n\n[0] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101766#c1\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [ ] Build was run locally and without warnings or errors\n- [ ] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [x] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nbuilds targeting the microblaze fail\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- Builds now succeed\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\nI tested compiles via GCC 12 and 9 for x86_64 and microblaze targets and didn't encounter issues.\n\n<!-- Any other information that is important to this PR. -->"", 'score': -0.916927284328267, 'file_name': 'pr_32.csv'}]"
251,251,"[{'message': 'Thanks!', 'score': 0.9713279220741242, 'file_name': 'issue_45.csv'}]","[{'message': '### Describe the bug\n\nWith a plain `./configure` I get:\n```\n./src/liblzma/.libs/liblzma.a\n./src/liblzma/.libs/liblzma.so.5.4.2\n./src/liblzma/.libs/liblzma.so.5\n./src/liblzma/.libs/liblzma.so\n```\nbut as soon as I add `--disable-threads` the `.so.5.4.2` file and links are missing:\n```\n./src/liblzma/.libs/liblzma.a\n```\nIs this the intended behaviour?\n\n### Version\n\n5.4.2\n\n### Operating System\n\nLinux AMD64\n\n### Relevant log output\n\n_No response_', 'score': -0.0033342018723487854, 'file_name': 'issue_45.csv'}]",[]
kostadinsh,kostadinsh,[],[],"[{'message': '### Describe the bug\n\nWhen building with the mold linker and -flto added to CFLAGS, this package seems to have some issues in the linking phase regarding symbols not being found. I\'ve turned mold\'s warnings into errors with `-Wl,--fatal-warnings`, so I can catch them more easily.\n\nGCC version used is gcc (Gentoo 13.1.1_p20230527 p3) 13.1.1 20230527\nMold is built from git at commit `b04aba89d3a1931470983212925443e7aefca1e1`\n\nSteps to reproduce: \n1. Clone this repo and cd into the xz folder\n2. run `export CFLAGS=""-O2 -pipe -flto=auto""` and `export LDFLAGS=""-fuse-ld=mold -Wl,--fatal-warnings""`\n3. run `autoreconf -vfi`\n4. run `./configure --enable-threads --prefix=/usr`\n5. build the package with `make V=1`\n\nIn the log output I am only going to only add the last few lines of the log as I think the entire log would be way too much, and then add the full logs from `./configure` and `make` as an attachment\n\n[xz-configure.log](https://github.com/tukaani-project/xz/files/11935128/xz-configure.log)\n[xz-make.log](https://github.com/tukaani-project/xz/files/11935130/xz-make.log)\n\n\n### Version\n\ncommit 66bdcfa85fef2911cc80f5f30fed3f9610faccb4\n\n### Operating System\n\nGentoo Linux\n\n### Relevant log output\n\n```shell\nlibtool: link: gcc -shared  -fPIC -DPIC  .libs/liblzma_la-tuklib_physmem.o .libs/liblzma_la-tuklib_cpucores.o .libs/liblzma_la-common.o .libs/liblzma_la-block_util.o .libs/liblzma_la-easy_preset.o .libs/liblzma_la-filter_common.o .libs/liblzma_la-hardware_physmem.o .libs/liblzma_la-index.o .libs/liblzma_la-stream_flags_common.o .libs/liblzma_la-string_conversion.o .libs/liblzma_la-vli_size.o .libs/liblzma_la-hardware_cputhreads.o .libs/liblzma_la-outqueue.o .libs/liblzma_la-alone_encoder.o .libs/liblzma_la-block_buffer_encoder.o .libs/liblzma_la-block_encoder.o .libs/liblzma_la-block_header_encoder.o .libs/liblzma_la-easy_buffer_encoder.o .libs/liblzma_la-easy_encoder.o .libs/liblzma_la-easy_encoder_memusage.o .libs/liblzma_la-filter_buffer_encoder.o .libs/liblzma_la-filter_encoder.o .libs/liblzma_la-filter_flags_encoder.o .libs/liblzma_la-index_encoder.o .libs/liblzma_la-stream_buffer_encoder.o .libs/liblzma_la-stream_encoder.o .libs/liblzma_la-stream_flags_encoder.o .libs/liblzma_la-vli_encoder.o .libs/liblzma_la-stream_encoder_mt.o .libs/liblzma_la-microlzma_encoder.o .libs/liblzma_la-alone_decoder.o .libs/liblzma_la-auto_decoder.o .libs/liblzma_la-block_buffer_decoder.o .libs/liblzma_la-block_decoder.o .libs/liblzma_la-block_header_decoder.o .libs/liblzma_la-easy_decoder_memusage.o .libs/liblzma_la-file_info.o .libs/liblzma_la-filter_buffer_decoder.o .libs/liblzma_la-filter_decoder.o .libs/liblzma_la-filter_flags_decoder.o .libs/liblzma_la-index_decoder.o .libs/liblzma_la-index_hash.o .libs/liblzma_la-stream_buffer_decoder.o .libs/liblzma_la-stream_decoder.o .libs/liblzma_la-stream_flags_decoder.o .libs/liblzma_la-vli_decoder.o .libs/liblzma_la-stream_decoder_mt.o .libs/liblzma_la-microlzma_decoder.o .libs/liblzma_la-lzip_decoder.o .libs/liblzma_la-check.o .libs/liblzma_la-crc32_table.o .libs/liblzma_la-crc32_fast.o .libs/liblzma_la-crc64_table.o .libs/liblzma_la-crc64_fast.o .libs/liblzma_la-sha256.o .libs/liblzma_la-lz_encoder.o .libs/liblzma_la-lz_encoder_mf.o .libs/liblzma_la-lz_decoder.o .libs/liblzma_la-lzma_encoder_presets.o .libs/liblzma_la-lzma_encoder.o .libs/liblzma_la-lzma_encoder_optimum_fast.o .libs/liblzma_la-lzma_encoder_optimum_normal.o .libs/liblzma_la-fastpos_table.o .libs/liblzma_la-lzma_decoder.o .libs/liblzma_la-lzma2_encoder.o .libs/liblzma_la-lzma2_decoder.o .libs/liblzma_la-price_table.o .libs/liblzma_la-delta_common.o .libs/liblzma_la-delta_encoder.o .libs/liblzma_la-delta_decoder.o .libs/liblzma_la-simple_coder.o .libs/liblzma_la-simple_encoder.o .libs/liblzma_la-simple_decoder.o .libs/liblzma_la-x86.o .libs/liblzma_la-powerpc.o .libs/liblzma_la-ia64.o .libs/liblzma_la-arm.o .libs/liblzma_la-armthumb.o .libs/liblzma_la-arm64.o .libs/liblzma_la-sparc.o   -lpthread  -O2 -flto=auto -Wl,--version-script=../../src/liblzma/liblzma_linux.map -fuse-ld=mold -Wl,--fatal-warnings   -pthread -Wl,-soname -Wl,liblzma.so.5 -o .libs/liblzma.so.5.5.99\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2` to symbol `lzma_block_uncomp_encode`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2` to symbol `lzma_cputhreads`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2` to symbol `lzma_get_progress`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2` to symbol `lzma_stream_encoder_mt`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2` to symbol `lzma_stream_encoder_mt_memusage`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.1.2alpha` to symbol `lzma_stream_encoder_mt`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.1.2alpha` to symbol `lzma_stream_encoder_mt_memusage`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2.2` to symbol `lzma_block_uncomp_encode`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2.2` to symbol `lzma_cputhreads`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2.2` to symbol `lzma_get_progress`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2.2` to symbol `lzma_stream_encoder_mt`: symbol not found\nmold: error: ../../src/liblzma/liblzma_linux.map: cannot assign version `XZ_5.2.2` to symbol `lzma_stream_encoder_mt_memusage`: symbol not found\ncollect2: error: ld returned 1 exit status\nmake[4]: *** [Makefile:963: liblzma.la] Error 1\nmake[4]: Leaving directory \'/home/kostadin/xz/src/liblzma\'\nmake[3]: *** [Makefile:1747: all-recursive] Error 1\nmake[3]: Leaving directory \'/home/kostadin/xz/src/liblzma\'\nmake[2]: *** [Makefile:429: all-recursive] Error 1\nmake[2]: Leaving directory \'/home/kostadin/xz/src\'\nmake[1]: *** [Makefile:624: all-recursive] Error 1\nmake[1]: Leaving directory \'/home/kostadin/xz\'\nmake: *** [Makefile:493: all] Error 2\n```', 'score': -0.20866599027067423, 'file_name': 'issue_55.csv'}]"
cblc,cblc,[],"[{'message': ""### Describe the Feature\n\nWhen cross-compiling to Windows (for example from either Linux or MacOS to Windows, using mingw-w64), I'd like to be able to run the `make check` suite in a Windows guest in a VM. For this to be possible, I'd need that the tests executables and scripts be copied (or installed) to a given directory, which I could have set up as a shared folder with a virtual machine.\n\nThe current behaviour when you cross-compile and issue a `make check`, is that all test programs are built, but then they are executed (which obviously fails, as you are cross compiling).\n\nIf your build system was plain Makefiles, I'd happily volunteer to implement this feature, but I have no Autotools knowledge, so I'm afraid I cannot help writing it.\n\nPerhaps a good way of implementing this would be to add a switch to configure, so that when that switch is present, all the test programs are built but not executed, and are also installed when you do a `make install`. The only problem I see is that I'm not sure if the main script that runs all tests could be saved as a normal script file or if you are running all the tests directly from the Makefile generated by `configure`.\n\n### Expected Complications\n\n_No response_\n\n### Will I try to implement this new feature?\n\nNo"", 'score': 0.024646015372127295, 'file_name': 'issue_54.csv'}]",[]
arixmkii,arixmkii,"[{'message': 'Thank you for detailed feedback! 👍  Will rework the changes and group them into logically separated commits.', 'score': 0.9406270065810531, 'file_name': 'pr_34.csv'}]","[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [X] Tests for the changes have been added (for bug fixes / features)\n- [X] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [X] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nNo Windows CI at all.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: https://github.com/tukaani-project/xz/issues/18\n\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- autotools build set for Windows added\n- build is using msys2 with UCRT64 toolchain\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->\nCMake build part is not provided as part of this PR.\n\nAdditional changes:\n* bumped checkout action to v3 (not really critical, but I did while trying to understand build failure)\n* fixed ""false positive"" uninitialized warning with empty in stream_encoder.c\n* fixed missing include in memcmplen.h, because this include is not provided if --disable-threads is requested for build\n\nWindows build run is very slow (comparing to others), but I don\'t think it could be somehow improved.', 'score': -2.527330070734024e-05, 'file_name': 'pr_34.csv'}, {'message': 'This is how it looked in my fork.\n\n<img width=""318"" alt=""image"" src=""https://user-images.githubusercontent.com/36887373/218340575-4f9ca3ce-e4a5-4c52-ad8c-eaee4c1ec466.png"">', 'score': 0.0063315946608781815, 'file_name': 'pr_34.csv'}]",[]
duerpei,duerpei,[],"[{'message': ""Add target 'build-PROGRAMS' to only compile the test set under '/tests' and not run locally."", 'score': -0.17398803494870663, 'file_name': 'pr_52.csv'}]",[]
bebuch,bebuch,[],"[{'message': 'Boost iostream [uses `find_package` in quiet mode](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#L16) and then [again uses `find_package` with required](https://github.com/boostorg/iostreams/blob/5fe4de84f863964f7573be1146f524886146a5d3/CMakeLists.txt#LL30C1-L30C49). This second call triggers a `add_library cannot create imported target ""ZLIB::ZLIB"" because another target with the same name already exists.`\n\nThis can simply be fixed by skipping the alias part on secondary `find_package` runs.\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [x] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n\nFrom Boost iostream compilation which finds XZ via config file:\n\n```\nCMake Error at C:/Temp/lib/win_x86_64_debug/lib/cmake/zlib/ZLIBConfig.cmake:13 (add_library):\n  add_library cannot create imported target ""ZLIB::ZLIB"" because another\n  target with the same name already exists.\nCall Stack (most recent call first):\n  libs/iostreams/CMakeLists.txt:30 (find_package)\n  libs/iostreams/CMakeLists.txt:38 (boost_iostreams_option)\n```\n\n## What is the new behavior?\n\n`find_package` works on the first and all folloring runs.\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No', 'score': -0.03314725682139397, 'file_name': 'pr_51.csv'}]",[]
QrczakMK,QrczakMK,[],"[{'message': '### Describe the bug\n\nWhen given empty buffers with `next_in == NULL` and `avail_in == 0` (or same for `out`), liblzma sometimes computes `NULL + 0`, which has undefined behavior in C (it is defined in C++).\n\nThis gets detected by ubsan.\n\nThe following places are affected (possibly more):\n\nhttps://github.com/tukaani-project/xz/blob/913ddc5572b9455fa0cf299be2e35c708840e922/src/liblzma/common/common.c#L291-L297\nThe first 3 lines can be guarded with `if (in_pos != 0)`, the last 3 lines can be guarded with `if (out_pos != 0)`.\n\nhttps://github.com/tukaani-project/xz/blob/75f1a6c26df4ce329da0882786403e3ccf5cd898/src/liblzma/common/block_encoder.c#L81\nWrite `in_start != 0 ? in + in_start : in`.\n\n### Version\n\n5.4.1\n\n### Operating System\n\nLinux\n\n### Relevant log output\n\n_No response_', 'score': -0.07491118367761374, 'file_name': 'issue_36.csv'}]",[]
ChanTsune,ChanTsune,"[{'message': 'Hi! tukaani-project members!\n\nIn the process of my personal project, I made it possible to compile liblzma with WebAssembly as the target, so please use it if you like.\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [x] Refactoring (no functional changes, no api changes)\n- [x] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\nBuild failed with rust+wasi-sdk.\n```\n""clang"" ""-O0"" ""-ffunction-sections"" ""-fdata-sections"" ""-fPIC"" ""-g"" ""-fno-omit-frame-pointer"" ""--target=wasm32-wasi"" ""--sysroot"" ""/wasi-sdk-20.0/share/wasi-sysroot"" ""-D_WASI_EMULATED_SIGNAL"" ""-I"" ""xz-5.2/src/liblzma/api"" ""-I"" ""xz-5.2/src/liblzma/lzma"" ""-I"" ""xz-5.2/src/liblzma/lz"" ""-I"" ""xz-5.2/src/liblzma/check"" ""-I"" ""xz-5.2/src/liblzma/simple"" ""-I"" ""xz-5.2/src/liblzma/delta"" ""-I"" ""xz-5.2/src/liblzma/common"" ""-I"" ""xz-5.2/src/liblzma/rangecoder"" ""-I"" ""xz-5.2/src/common"" ""-I"" ""/xz2-rs/lzma-sys"" ""-std=c99"" ""-pthread"" ""-DHAVE_CONFIG_H=1"" ""-o"" ""/xz2-rs/target/wasm32-wasi/debug/build/lzma-sys-7bbeecf3b4119da3/out/xz-5.2/src/liblzma/check/check.o"" ""-c"" ""xz-5.2/src/liblzma/check/check.c""\n  cargo:warning=In file included from xz-5.2/src/liblzma/check/check.c:13:\n  cargo:warning=In file included from xz-5.2/src/liblzma/check/check.h:16:\n  cargo:warning=In file included from xz-5.2/src/liblzma/common/common.h:17:\n  cargo:warning=xz-5.2/src/common/mythread.h:146:12: warning: call to undeclared function \'pthread_sigmask\'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]\n  cargo:warning=        int ret = pthread_sigmask(how, set, oset);\n  cargo:warning=                  ^\n  cargo:warning=xz-5.2/src/common/mythread.h:160:2: warning: call to undeclared function \'sigfillset\'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]\n  cargo:warning=        sigfillset(&all);\n  cargo:warning=        ^\n  cargo:warning=xz-5.2/src/common/mythread.h:162:19: error: use of undeclared identifier \'SIG_SETMASK\'\n  cargo:warning=        mythread_sigmask(SIG_SETMASK, &all, &old);\n  cargo:warning=                         ^\n  cargo:warning=xz-5.2/src/common/mythread.h:164:19: error: use of undeclared identifier \'SIG_SETMASK\'\n  cargo:warning=        mythread_sigmask(SIG_SETMASK, &old, NULL);\n  cargo:warning=                         ^\n  cargo:warning=2 warnings and 2 errors generated.\n  exit status: 1\n```\n\n<!-- Related issue this PR addresses, if applicable -->\n<!-- Related Issue URL: -->\n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- Optimize to include `mythread.h` only where necessary\n- Build liblzma with `ENABLE_THREADS=OFF` now passes with the latest [wasi-sdk](https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-20)\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\n<!-- Any other information that is important to this PR. -->', 'score': 0.3841244620271027, 'file_name': 'pr_56.csv'}]","[{'message': 'Thanks for the review #56 yesterday!\n\nI tried another approach, could you please review this one?\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [x] Tests for the changes have been added (for bug fixes / features)\n- [x] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [ ] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [x] Refactoring (no functional changes, no api changes)\n- [x] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\n<!-- Please describe the current behavior that you are modifying. -->\n```\n$ mkdir build && cd build\n$ cmake .. -DENABLE_THREADS=OFF\n$ make liblzma\n[  0%] Building C object CMakeFiles/liblzma.dir/src/common/tuklib_physmem.c.obj                                       \n[  1%] Building C object CMakeFiles/liblzma.dir/src/liblzma/check/check.c.obj                                         \nIn file included from /xz/src/liblzma/check/check.c:13:                                                               \nIn file included from /xz/src/liblzma/check/check.h:16:                                                               \nIn file included from /xz/src/liblzma/common/common.h:17:\nIn file included from /xz/src/common/mythread.h:84:\n/wasi-sysroot/include/signal.h:2:2: error: ""wasm lacks signal support; to enable minimal signal emulation, compile with -D_WASI_EMULATED_SIGNAL and link with -lwasi-emulated-signal""\n#error ""wasm lacks signal support; to enable minimal signal emulation, \\\n ^\nIn file included from /xz/src/liblzma/check/check.c:13:\nIn file included from /xz/src/liblzma/check/check.h:16:\nIn file included from /xz/src/liblzma/common/common.h:17:\n/xz/src/common/mythread.h:87:33: error: unknown type name \'sigset_t\'\nmythread_sigmask(int how, const sigset_t *restrict set,\n                                ^\n/xz/src/common/mythread.h:88:3: error: unknown type name \'sigset_t\'\n                sigset_t *restrict oset)\n                ^\n/xz/src/common/mythread.h:90:12: error: call to undeclared function \'sigprocmask\'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]\n        int ret = sigprocmask(how, set, oset);\n                  ^\n4 errors generated.\nmake[3]: *** [CMakeFiles/liblzma.dir/build.make:90: CMakeFiles/liblzma.dir/src/liblzma/check/check.c.obj] Error 1\nmake[2]: *** [CMakeFiles/Makefile2:139: CMakeFiles/liblzma.dir/all] Error 2\nmake[1]: *** [CMakeFiles/Makefile2:146: CMakeFiles/liblzma.dir/rule] Error 2\nmake: *** [Makefile:179: liblzma] Error 2\n```\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: \n#56 \n\n## What is the new behavior?\n<!-- Please describe the behavior or changes that are being added by this\nPR. -->\n\n- Changed to exclude signal functions not supported by WebAssembly, using the predefined `__wasm__` macro when the build target is set to wasm32 with clang.\nThis change allows `liblzma` to be built with the platform-independent `wasm32-uknown-unknown` target.\nI believe this exclusion will work in the same way as the build when targeting Windows, so it will minimize unexpected changes.\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n<!-- If this introduces a breaking change, please describe the impact and\nmigration path for existing applications below. -->\n\n\n## Other information\n\nBuild tested on docker\n\n`Dockerfile`\n```docker\nFROM ghcr.io/webassembly/wasi-sdk:latest\n\nRUN apt update && apt install -y git\n\nRUN git clone https://github.com/ChanTsune/xz.git\n\nRUN mkdir -p ./xz/build\n\nRUN cd xz && git fetch && git switch feature/liblzma/wasm\n\nWORKDIR /xz/build\n\nRUN cmake .. -DENABLE_THREADS=OFF\n\nRUN CFLAGS=""-target wasm32-unknown-unknown"" make liblzma\n```\n\n```sh\n$ docker build -t xz .\n```\n\nIf you need, you can see the predefined macros when targeting wasm32 in clang by following commands\n```\n$ clang -E -dM -target wasm32-unknown-unknown -x c /dev/null\n```\nor if you want to check with the latest wasi-sdk clang\n```sh\n$ docker image pull ghcr.io/webassembly/wasi-sdk\n$ docker run --rm -i ghcr.io/webassembly/wasi-sdk clang-16 -E -dM -target wasm32-unknown-unknown -x c /dev/null\n```', 'score': 0.12910193344578147, 'file_name': 'pr_57.csv'}]",[]
delphij,delphij,[],[],"[{'message': ""When the kernel is built without capability mode support, or when using an emulator like qemu-user-static that does not translate system calls, these calls will return a negative number and set the errno to ENOSYS. However, this error does not indicate a real programming or runtime error and is generally ignored by base system applications built with capability mode sandboxing.\n\n## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [X] Build was run locally and without warnings or errors\n- [X] All previous and new tests pass\n\n\n## Pull request type\n\nPlease check the type of change your PR introduces:\n- [X] Bugfix\n\n## What is the current behavior?\n\nxz would abort execution with `Failed to enable the sandbox` when capability mode system calls failed, regardless if the host system have capability mode support.\n\nIt is advisable that binaries with capability mode sandbox enabled to ignore capability mode errors when they are solely because the system does not have the support, this is done on many applications including OpenSSH and base system utilities.  In fact, FreeBSD have a set of macros called [capsicum_helpers(3)](https://man.freebsd.org/cgi/man.cgi?query=capsicum_helpers&sektion=3) which [wraps](https://cgit.freebsd.org/src/tree/lib/libcapsicum/capsicum_helpers.h#n153) this anti-pattern.\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=269185\n\n\n## What is the new behavior?\n\nxz will ignore sandbox failures caused by the kernel lacking support of capsicum mode.\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [X] No\n\n\n## Other information\n\nThe proposed patch modified `cap_*` calls to also check if the failure was caused by the lack of support (ENOSYS) and make it ignore it.  If possible, it's probably reasonable to just use `caph_*` calls found in `capsicum_helpers(3)`."", 'score': -0.34405540581792593, 'file_name': 'pr_43.csv'}]"
autoantwort,autoantwort,[],"[{'message': '## Pull request checklist\n\nPlease check if your PR fulfills the following requirements:\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been reviewed and added / updated if needed (for bug fixes / features)\n- [x] Build was run locally and without warnings or errors\n- [x] All previous and new tests pass\n\n\n## Pull request type\n\n<!-- Please try to limit your pull request to one type, submit multiple\npull requests if needed. --> \n\nPlease check the type of change your PR introduces:\n- [x] Bugfix\n- [ ] Feature\n- [ ] Code style update (formatting, renaming, typo fix)\n- [ ] Refactoring (no functional changes, no api changes)\n- [ ] Build related changes\n- [ ] Documentation content changes\n- [ ] Other (please describe): \n\n\n## What is the current behavior?\nIf the compiler uses a very old c standard as default, it will fail to build\n\n\n<!-- Related issue this PR addresses, if applicable -->\nRelated Issue URL: https://github.com/microsoft/vcpkg/issues/21680#issuecomment-983342257\n\n\n## What is the new behavior?\nSet the required c standard to C99\n\n## Does this introduce a breaking change?\n\n- [ ] Yes\n- [x] No\n\n\n', 'score': -0.0022812671959400177, 'file_name': 'pr_42.csv'}]",[]
boofish,boofish,[],"[{'message': '### Describe the bug\n\nHi, I recently fuzz the xz for parsing lzma format file and found one interesting case.\nSpecifically, xz rejects one valid lzma format file  while another parser, the 7zip accepts it.\n\nMeanwhile, I use the command `./7zz e -so -tlzma:s0 invalid.lzma` for 7zip, and  use `xz -d -c --format=lzma invalid.lzma` for xz.\n\nI have contacted 7zip, it seems that xz should not reject it. \n\nThe contact link:  [https://sourceforge.net/p/sevenzip/bugs/2380/](https://sourceforge.net/p/sevenzip/bugs/2380/)\n\nThe interesting file is attached.[invalid.zip](https://github.com/tukaani-project/xz/files/10425749/invalid.zip)\n\n\n\n\n\n### Version\n\n5.2.7\n\n### Operating System\n\nubuntu 22.04\n\n### Relevant log output\n\n_No response_', 'score': 0.09680949430912733, 'file_name': 'issue_20.csv'}]",[]
